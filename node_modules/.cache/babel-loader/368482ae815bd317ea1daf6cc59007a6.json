{"ast":null,"code":"import { __assign, __awaiter, __generator } from \"tslib\";\nexport var serializerMiddleware = function (options, serializer) {\n  return function (next, context) {\n    return function (args) {\n      return __awaiter(void 0, void 0, void 0, function () {\n        var request;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , serializer(args.input, options)];\n\n            case 1:\n              request = _a.sent();\n              return [2\n              /*return*/\n              , next(__assign(__assign({}, args), {\n                request: request\n              }))];\n          }\n        });\n      });\n    };\n  };\n};","map":{"version":3,"mappings":";AAUA,OAAO,IAAMA,oBAAoB,GAC/B,UACEC,OADF,EAEEC,UAFF,EAEkD;EAElD,iBAACC,IAAD,EAAwCC,OAAxC,EAAwE;IACxE,iBAAOC,IAAP,EAA6C;MAAA;;;;;cAC3B;cAAA;cAAA,EAAMH,UAAU,CAACG,IAAI,CAACC,KAAN,EAAaL,OAAb,CAAhB;;;cAAVM,OAAO,GAAGC,SAAV;cACN;cAAA;cAAA,EAAOL,IAAI,uBACNE,IADM,GACF;gBACPE,OAAO;cADA,CADE,EAAX;;;OAF2C;IAM5C,CAND;EAMC,CAPD;AAOC,CAZI","names":["serializerMiddleware","options","serializer","next","context","args","input","request","_a"],"sources":["/Users/dylanbienstock/Documents/cs98/hack-a-thing-1/amplifyapp/node_modules/@aws-sdk/client-lex-runtime-v2/node_modules/@aws-sdk/middleware-serde/src/serializerMiddleware.ts"],"sourcesContent":["import {\n  EndpointBearer,\n  HandlerExecutionContext,\n  RequestSerializer,\n  SerializeHandler,\n  SerializeHandlerArguments,\n  SerializeHandlerOutput,\n  SerializeMiddleware,\n} from \"@aws-sdk/types\";\n\nexport const serializerMiddleware =\n  <Input extends object, Output extends object, RuntimeUtils extends EndpointBearer>(\n    options: RuntimeUtils,\n    serializer: RequestSerializer<any, RuntimeUtils>\n  ): SerializeMiddleware<Input, Output> =>\n  (next: SerializeHandler<Input, Output>, context: HandlerExecutionContext): SerializeHandler<Input, Output> =>\n  async (args: SerializeHandlerArguments<Input>): Promise<SerializeHandlerOutput<Output>> => {\n    const request = await serializer(args.input, options);\n    return next({\n      ...args,\n      request,\n    });\n  };\n"]},"metadata":{},"sourceType":"module"}