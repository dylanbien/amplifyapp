{"ast":null,"code":"import { getSkewCorrectedDate } from \"./getSkewCorrectedDate\";\n/**\n * Checks if the provided date is within the skew window of 300000ms.\n *\n * @param clockTime - The time to check for skew in milliseconds.\n * @param systemClockOffset - The offset of the system clock in milliseconds.\n */\n\nexport var isClockSkewed = function (clockTime, systemClockOffset) {\n  return Math.abs(getSkewCorrectedDate(systemClockOffset).getTime() - clockTime) >= 300000;\n};","map":{"version":3,"mappings":"AAAA,SAASA,oBAAT,QAAqC,wBAArC;AAEA;;;;;;;AAMA,OAAO,IAAMC,aAAa,GAAG,UAACC,SAAD,EAAoBC,iBAApB,EAA6C;EACxE,WAAI,CAACC,GAAL,CAASJ,oBAAoB,CAACG,iBAAD,CAApB,CAAwCE,OAAxC,KAAoDH,SAA7D,KAA2E,MAA3E;AAAiF,CAD5E","names":["getSkewCorrectedDate","isClockSkewed","clockTime","systemClockOffset","abs","getTime"],"sources":["/Users/dylanbienstock/Documents/cs98/hack-a-thing-1/amplifyapp/node_modules/@aws-sdk/client-lex-runtime-v2/node_modules/@aws-sdk/middleware-signing/src/utils/isClockSkewed.ts"],"sourcesContent":["import { getSkewCorrectedDate } from \"./getSkewCorrectedDate\";\n\n/**\n * Checks if the provided date is within the skew window of 300000ms.\n *\n * @param clockTime - The time to check for skew in milliseconds.\n * @param systemClockOffset - The offset of the system clock in milliseconds.\n */\nexport const isClockSkewed = (clockTime: number, systemClockOffset: number) =>\n  Math.abs(getSkewCorrectedDate(systemClockOffset).getTime() - clockTime) >= 300000;\n"]},"metadata":{},"sourceType":"module"}