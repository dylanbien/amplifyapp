{"ast":null,"code":"import { __assign, __awaiter, __generator, __read } from \"tslib\";\nimport { StartConversationRequestEventStream } from \"../models/models_0\";\nimport { HttpRequest as __HttpRequest } from \"@aws-sdk/protocol-http\";\nimport { expectInt32 as __expectInt32, expectNonNull as __expectNonNull, expectObject as __expectObject, expectString as __expectString, extendedEncodeURIComponent as __extendedEncodeURIComponent, limitedParseDouble as __limitedParseDouble } from \"@aws-sdk/smithy-client\";\nexport var serializeAws_restJson1DeleteSessionCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, labelValue, labelValue, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {};\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/bots/{botId}/botAliases/{botAliasId}/botLocales/{localeId}/sessions/{sessionId}\";\n\n          if (input.botId !== undefined) {\n            labelValue = input.botId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: botId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{botId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: botId.\");\n          }\n\n          if (input.botAliasId !== undefined) {\n            labelValue = input.botAliasId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: botAliasId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{botAliasId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: botAliasId.\");\n          }\n\n          if (input.localeId !== undefined) {\n            labelValue = input.localeId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: localeId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{localeId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: localeId.\");\n          }\n\n          if (input.sessionId !== undefined) {\n            labelValue = input.sessionId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: sessionId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{sessionId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: sessionId.\");\n          }\n\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetSessionCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, labelValue, labelValue, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {};\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/bots/{botId}/botAliases/{botAliasId}/botLocales/{localeId}/sessions/{sessionId}\";\n\n          if (input.botId !== undefined) {\n            labelValue = input.botId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: botId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{botId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: botId.\");\n          }\n\n          if (input.botAliasId !== undefined) {\n            labelValue = input.botAliasId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: botAliasId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{botAliasId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: botAliasId.\");\n          }\n\n          if (input.localeId !== undefined) {\n            labelValue = input.localeId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: localeId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{localeId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: localeId.\");\n          }\n\n          if (input.sessionId !== undefined) {\n            labelValue = input.sessionId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: sessionId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{sessionId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: sessionId.\");\n          }\n\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1PutSessionCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, labelValue, labelValue, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign({\n            \"content-type\": \"application/json\"\n          }, isSerializableHeaderValue(input.responseContentType) && {\n            responsecontenttype: input.responseContentType\n          });\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/bots/{botId}/botAliases/{botAliasId}/botLocales/{localeId}/sessions/{sessionId}\";\n\n          if (input.botId !== undefined) {\n            labelValue = input.botId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: botId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{botId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: botId.\");\n          }\n\n          if (input.botAliasId !== undefined) {\n            labelValue = input.botAliasId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: botAliasId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{botAliasId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: botAliasId.\");\n          }\n\n          if (input.localeId !== undefined) {\n            labelValue = input.localeId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: localeId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{localeId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: localeId.\");\n          }\n\n          if (input.sessionId !== undefined) {\n            labelValue = input.sessionId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: sessionId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{sessionId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: sessionId.\");\n          }\n\n          body = JSON.stringify(__assign(__assign(__assign({}, input.messages !== undefined && input.messages !== null && {\n            messages: serializeAws_restJson1Messages(input.messages, context)\n          }), input.requestAttributes !== undefined && input.requestAttributes !== null && {\n            requestAttributes: serializeAws_restJson1StringMap(input.requestAttributes, context)\n          }), input.sessionState !== undefined && input.sessionState !== null && {\n            sessionState: serializeAws_restJson1SessionState(input.sessionState, context)\n          }));\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1RecognizeTextCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, labelValue, labelValue, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/bots/{botId}/botAliases/{botAliasId}/botLocales/{localeId}/sessions/{sessionId}/text\";\n\n          if (input.botId !== undefined) {\n            labelValue = input.botId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: botId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{botId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: botId.\");\n          }\n\n          if (input.botAliasId !== undefined) {\n            labelValue = input.botAliasId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: botAliasId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{botAliasId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: botAliasId.\");\n          }\n\n          if (input.localeId !== undefined) {\n            labelValue = input.localeId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: localeId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{localeId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: localeId.\");\n          }\n\n          if (input.sessionId !== undefined) {\n            labelValue = input.sessionId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: sessionId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{sessionId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: sessionId.\");\n          }\n\n          body = JSON.stringify(__assign(__assign(__assign({}, input.requestAttributes !== undefined && input.requestAttributes !== null && {\n            requestAttributes: serializeAws_restJson1StringMap(input.requestAttributes, context)\n          }), input.sessionState !== undefined && input.sessionState !== null && {\n            sessionState: serializeAws_restJson1SessionState(input.sessionState, context)\n          }), input.text !== undefined && input.text !== null && {\n            text: input.text\n          }));\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1RecognizeUtteranceCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, labelValue, labelValue, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign(__assign(__assign(__assign({\n            \"content-type\": \"application/octet-stream\",\n            \"x-amz-content-sha256\": \"UNSIGNED-PAYLOAD\"\n          }, isSerializableHeaderValue(input.sessionState) && {\n            \"x-amz-lex-session-state\": input.sessionState\n          }), isSerializableHeaderValue(input.requestAttributes) && {\n            \"x-amz-lex-request-attributes\": input.requestAttributes\n          }), isSerializableHeaderValue(input.requestContentType) && {\n            \"content-type\": input.requestContentType\n          }), isSerializableHeaderValue(input.responseContentType) && {\n            \"response-content-type\": input.responseContentType\n          });\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/bots/{botId}/botAliases/{botAliasId}/botLocales/{localeId}/sessions/{sessionId}/utterance\";\n\n          if (input.botId !== undefined) {\n            labelValue = input.botId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: botId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{botId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: botId.\");\n          }\n\n          if (input.botAliasId !== undefined) {\n            labelValue = input.botAliasId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: botAliasId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{botAliasId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: botAliasId.\");\n          }\n\n          if (input.localeId !== undefined) {\n            labelValue = input.localeId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: localeId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{localeId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: localeId.\");\n          }\n\n          if (input.sessionId !== undefined) {\n            labelValue = input.sessionId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: sessionId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{sessionId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: sessionId.\");\n          }\n\n          if (input.inputStream !== undefined) {\n            body = input.inputStream;\n          }\n\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1StartConversationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, labelValue, labelValue, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign({}, isSerializableHeaderValue(input.conversationMode) && {\n            \"x-amz-lex-conversation-mode\": input.conversationMode\n          });\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/bots/{botId}/botAliases/{botAliasId}/botLocales/{localeId}/sessions/{sessionId}/conversation\";\n\n          if (input.botId !== undefined) {\n            labelValue = input.botId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: botId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{botId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: botId.\");\n          }\n\n          if (input.botAliasId !== undefined) {\n            labelValue = input.botAliasId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: botAliasId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{botAliasId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: botAliasId.\");\n          }\n\n          if (input.localeId !== undefined) {\n            labelValue = input.localeId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: localeId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{localeId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: localeId.\");\n          }\n\n          if (input.sessionId !== undefined) {\n            labelValue = input.sessionId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: sessionId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{sessionId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: sessionId.\");\n          }\n\n          if (input.requestEventStream !== undefined) {\n            body = context.eventStreamMarshaller.serialize(input.requestEventStream, function (event) {\n              return serializeAws_restJson1StartConversationRequestEventStream_event(event, context);\n            });\n          }\n\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1DeleteSessionCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1DeleteSessionCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            botAliasId: undefined,\n            botId: undefined,\n            localeId: undefined,\n            sessionId: undefined\n          };\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data.botAliasId !== undefined && data.botAliasId !== null) {\n            contents.botAliasId = __expectString(data.botAliasId);\n          }\n\n          if (data.botId !== undefined && data.botId !== null) {\n            contents.botId = __expectString(data.botId);\n          }\n\n          if (data.localeId !== undefined && data.localeId !== null) {\n            contents.localeId = __expectString(data.localeId);\n          }\n\n          if (data.sessionId !== undefined && data.sessionId !== null) {\n            contents.sessionId = __expectString(data.sessionId);\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1DeleteSessionCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, parsedBody, message;\n\n    var _j;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _j = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_j.body = _k.sent(), _j)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"AccessDeniedException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.lexruntimev2#AccessDeniedException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ConflictException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.lexruntimev2#ConflictException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.lexruntimev2#InternalServerException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.lexruntimev2#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"ThrottlingException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.lexruntimev2#ThrottlingException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"ValidationException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.lexruntimev2#ValidationException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1AccessDeniedExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ConflictExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ThrottlingExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ValidationExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetSessionCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1GetSessionCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            interpretations: undefined,\n            messages: undefined,\n            sessionId: undefined,\n            sessionState: undefined\n          };\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data.interpretations !== undefined && data.interpretations !== null) {\n            contents.interpretations = deserializeAws_restJson1Interpretations(data.interpretations, context);\n          }\n\n          if (data.messages !== undefined && data.messages !== null) {\n            contents.messages = deserializeAws_restJson1Messages(data.messages, context);\n          }\n\n          if (data.sessionId !== undefined && data.sessionId !== null) {\n            contents.sessionId = __expectString(data.sessionId);\n          }\n\n          if (data.sessionState !== undefined && data.sessionState !== null) {\n            contents.sessionState = deserializeAws_restJson1SessionState(data.sessionState, context);\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetSessionCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, parsedBody, message;\n\n    var _h;\n\n    return __generator(this, function (_j) {\n      switch (_j.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _h = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_h.body = _j.sent(), _h)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"AccessDeniedException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.lexruntimev2#AccessDeniedException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"InternalServerException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.lexruntimev2#InternalServerException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.lexruntimev2#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"ThrottlingException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.lexruntimev2#ThrottlingException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"ValidationException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.lexruntimev2#ValidationException\":\n              return [3\n              /*break*/\n              , 10];\n          }\n\n          return [3\n          /*break*/\n          , 12];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1AccessDeniedExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ThrottlingExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ValidationExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 12:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _j.label = 13;\n\n        case 13:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1PutSessionCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return [2\n        /*return*/\n        , deserializeAws_restJson1PutSessionCommandError(output, context)];\n      }\n\n      contents = {\n        $metadata: deserializeMetadata(output),\n        audioStream: undefined,\n        contentType: undefined,\n        messages: undefined,\n        requestAttributes: undefined,\n        sessionId: undefined,\n        sessionState: undefined\n      };\n\n      if (output.headers[\"content-type\"] !== undefined) {\n        contents.contentType = output.headers[\"content-type\"];\n      }\n\n      if (output.headers[\"x-amz-lex-messages\"] !== undefined) {\n        contents.messages = output.headers[\"x-amz-lex-messages\"];\n      }\n\n      if (output.headers[\"x-amz-lex-session-state\"] !== undefined) {\n        contents.sessionState = output.headers[\"x-amz-lex-session-state\"];\n      }\n\n      if (output.headers[\"x-amz-lex-request-attributes\"] !== undefined) {\n        contents.requestAttributes = output.headers[\"x-amz-lex-request-attributes\"];\n      }\n\n      if (output.headers[\"x-amz-lex-session-id\"] !== undefined) {\n        contents.sessionId = output.headers[\"x-amz-lex-session-id\"];\n      }\n\n      data = output.body;\n      contents.audioStream = data;\n      return [2\n      /*return*/\n      , Promise.resolve(contents)];\n    });\n  });\n};\n\nvar deserializeAws_restJson1PutSessionCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, _k, parsedBody, message;\n\n    var _l;\n\n    return __generator(this, function (_m) {\n      switch (_m.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _l = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_l.body = _m.sent(), _l)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"AccessDeniedException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.lexruntimev2#AccessDeniedException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"BadGatewayException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.lexruntimev2#BadGatewayException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ConflictException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.lexruntimev2#ConflictException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"DependencyFailedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.lexruntimev2#DependencyFailedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"InternalServerException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.lexruntimev2#InternalServerException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.lexruntimev2#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"ThrottlingException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.lexruntimev2#ThrottlingException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"ValidationException\":\n              return [3\n              /*break*/\n              , 16];\n\n            case \"com.amazonaws.lexruntimev2#ValidationException\":\n              return [3\n              /*break*/\n              , 16];\n          }\n\n          return [3\n          /*break*/\n          , 18];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1AccessDeniedExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 19];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadGatewayExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 19];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ConflictExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 19];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1DependencyFailedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 19];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 19];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 19];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ThrottlingExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 19];\n\n        case 16:\n          _k = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ValidationExceptionResponse(parsedOutput, context)];\n\n        case 17:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _k.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 19];\n\n        case 18:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _m.label = 19;\n\n        case 19:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1RecognizeTextCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1RecognizeTextCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            interpretations: undefined,\n            messages: undefined,\n            requestAttributes: undefined,\n            sessionId: undefined,\n            sessionState: undefined\n          };\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data.interpretations !== undefined && data.interpretations !== null) {\n            contents.interpretations = deserializeAws_restJson1Interpretations(data.interpretations, context);\n          }\n\n          if (data.messages !== undefined && data.messages !== null) {\n            contents.messages = deserializeAws_restJson1Messages(data.messages, context);\n          }\n\n          if (data.requestAttributes !== undefined && data.requestAttributes !== null) {\n            contents.requestAttributes = deserializeAws_restJson1StringMap(data.requestAttributes, context);\n          }\n\n          if (data.sessionId !== undefined && data.sessionId !== null) {\n            contents.sessionId = __expectString(data.sessionId);\n          }\n\n          if (data.sessionState !== undefined && data.sessionState !== null) {\n            contents.sessionState = deserializeAws_restJson1SessionState(data.sessionState, context);\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1RecognizeTextCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, _k, parsedBody, message;\n\n    var _l;\n\n    return __generator(this, function (_m) {\n      switch (_m.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _l = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_l.body = _m.sent(), _l)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"AccessDeniedException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.lexruntimev2#AccessDeniedException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"BadGatewayException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.lexruntimev2#BadGatewayException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ConflictException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.lexruntimev2#ConflictException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"DependencyFailedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.lexruntimev2#DependencyFailedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"InternalServerException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.lexruntimev2#InternalServerException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.lexruntimev2#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"ThrottlingException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.lexruntimev2#ThrottlingException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"ValidationException\":\n              return [3\n              /*break*/\n              , 16];\n\n            case \"com.amazonaws.lexruntimev2#ValidationException\":\n              return [3\n              /*break*/\n              , 16];\n          }\n\n          return [3\n          /*break*/\n          , 18];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1AccessDeniedExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 19];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadGatewayExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 19];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ConflictExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 19];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1DependencyFailedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 19];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 19];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 19];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ThrottlingExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 19];\n\n        case 16:\n          _k = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ValidationExceptionResponse(parsedOutput, context)];\n\n        case 17:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _k.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 19];\n\n        case 18:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _m.label = 19;\n\n        case 19:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1RecognizeUtteranceCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return [2\n        /*return*/\n        , deserializeAws_restJson1RecognizeUtteranceCommandError(output, context)];\n      }\n\n      contents = {\n        $metadata: deserializeMetadata(output),\n        audioStream: undefined,\n        contentType: undefined,\n        inputMode: undefined,\n        inputTranscript: undefined,\n        interpretations: undefined,\n        messages: undefined,\n        requestAttributes: undefined,\n        sessionId: undefined,\n        sessionState: undefined\n      };\n\n      if (output.headers[\"x-amz-lex-input-mode\"] !== undefined) {\n        contents.inputMode = output.headers[\"x-amz-lex-input-mode\"];\n      }\n\n      if (output.headers[\"content-type\"] !== undefined) {\n        contents.contentType = output.headers[\"content-type\"];\n      }\n\n      if (output.headers[\"x-amz-lex-messages\"] !== undefined) {\n        contents.messages = output.headers[\"x-amz-lex-messages\"];\n      }\n\n      if (output.headers[\"x-amz-lex-interpretations\"] !== undefined) {\n        contents.interpretations = output.headers[\"x-amz-lex-interpretations\"];\n      }\n\n      if (output.headers[\"x-amz-lex-session-state\"] !== undefined) {\n        contents.sessionState = output.headers[\"x-amz-lex-session-state\"];\n      }\n\n      if (output.headers[\"x-amz-lex-request-attributes\"] !== undefined) {\n        contents.requestAttributes = output.headers[\"x-amz-lex-request-attributes\"];\n      }\n\n      if (output.headers[\"x-amz-lex-session-id\"] !== undefined) {\n        contents.sessionId = output.headers[\"x-amz-lex-session-id\"];\n      }\n\n      if (output.headers[\"x-amz-lex-input-transcript\"] !== undefined) {\n        contents.inputTranscript = output.headers[\"x-amz-lex-input-transcript\"];\n      }\n\n      data = output.body;\n      contents.audioStream = data;\n      return [2\n      /*return*/\n      , Promise.resolve(contents)];\n    });\n  });\n};\n\nvar deserializeAws_restJson1RecognizeUtteranceCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, _k, parsedBody, message;\n\n    var _l;\n\n    return __generator(this, function (_m) {\n      switch (_m.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _l = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_l.body = _m.sent(), _l)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"AccessDeniedException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.lexruntimev2#AccessDeniedException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"BadGatewayException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.lexruntimev2#BadGatewayException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ConflictException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.lexruntimev2#ConflictException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"DependencyFailedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.lexruntimev2#DependencyFailedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"InternalServerException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.lexruntimev2#InternalServerException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.lexruntimev2#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"ThrottlingException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.lexruntimev2#ThrottlingException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"ValidationException\":\n              return [3\n              /*break*/\n              , 16];\n\n            case \"com.amazonaws.lexruntimev2#ValidationException\":\n              return [3\n              /*break*/\n              , 16];\n          }\n\n          return [3\n          /*break*/\n          , 18];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1AccessDeniedExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 19];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadGatewayExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 19];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ConflictExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 19];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1DependencyFailedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 19];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 19];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 19];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ThrottlingExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 19];\n\n        case 16:\n          _k = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ValidationExceptionResponse(parsedOutput, context)];\n\n        case 17:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _k.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 19];\n\n        case 18:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _m.label = 19;\n\n        case 19:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1StartConversationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return [2\n        /*return*/\n        , deserializeAws_restJson1StartConversationCommandError(output, context)];\n      }\n\n      contents = {\n        $metadata: deserializeMetadata(output),\n        responseEventStream: undefined\n      };\n      data = context.eventStreamMarshaller.deserialize(output.body, function (event) {\n        return __awaiter(void 0, void 0, void 0, function () {\n          var eventName, eventHeaders, eventMessage, parsedEvent;\n\n          var _a;\n\n          return __generator(this, function (_b) {\n            switch (_b.label) {\n              case 0:\n                eventName = Object.keys(event)[0];\n                eventHeaders = Object.entries(event[eventName].headers).reduce(function (accummulator, curr) {\n                  accummulator[curr[0]] = curr[1].value;\n                  return accummulator;\n                }, {});\n                eventMessage = {\n                  headers: eventHeaders,\n                  body: event[eventName].body\n                };\n                parsedEvent = (_a = {}, _a[eventName] = eventMessage, _a);\n                return [4\n                /*yield*/\n                , deserializeAws_restJson1StartConversationResponseEventStream_event(parsedEvent, context)];\n\n              case 1:\n                return [2\n                /*return*/\n                , _b.sent()];\n            }\n          });\n        });\n      });\n      contents.responseEventStream = data;\n      return [2\n      /*return*/\n      , Promise.resolve(contents)];\n    });\n  });\n};\n\nvar deserializeAws_restJson1StartConversationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;\n\n    var _g;\n\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _g = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"AccessDeniedException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.lexruntimev2#AccessDeniedException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"InternalServerException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.lexruntimev2#InternalServerException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ThrottlingException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.lexruntimev2#ThrottlingException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"ValidationException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.lexruntimev2#ValidationException\":\n              return [3\n              /*break*/\n              , 8];\n          }\n\n          return [3\n          /*break*/\n          , 10];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1AccessDeniedExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ThrottlingExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ValidationExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nvar serializeAws_restJson1StartConversationRequestEventStream_event = function (input, context) {\n  return StartConversationRequestEventStream.visit(input, {\n    ConfigurationEvent: function (value) {\n      return serializeAws_restJson1ConfigurationEvent_event(value, context);\n    },\n    AudioInputEvent: function (value) {\n      return serializeAws_restJson1AudioInputEvent_event(value, context);\n    },\n    DTMFInputEvent: function (value) {\n      return serializeAws_restJson1DTMFInputEvent_event(value, context);\n    },\n    TextInputEvent: function (value) {\n      return serializeAws_restJson1TextInputEvent_event(value, context);\n    },\n    PlaybackCompletionEvent: function (value) {\n      return serializeAws_restJson1PlaybackCompletionEvent_event(value, context);\n    },\n    DisconnectionEvent: function (value) {\n      return serializeAws_restJson1DisconnectionEvent_event(value, context);\n    },\n    _: function (value) {\n      return value;\n    }\n  });\n};\n\nvar deserializeAws_restJson1StartConversationResponseEventStream_event = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p;\n\n    return __generator(this, function (_q) {\n      switch (_q.label) {\n        case 0:\n          if (!(output[\"PlaybackInterruptionEvent\"] !== undefined)) return [3\n          /*break*/\n          , 2];\n          _a = {};\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PlaybackInterruptionEvent_event(output[\"PlaybackInterruptionEvent\"], context)];\n\n        case 1:\n          return [2\n          /*return*/\n          , (_a.PlaybackInterruptionEvent = _q.sent(), _a)];\n\n        case 2:\n          if (!(output[\"TranscriptEvent\"] !== undefined)) return [3\n          /*break*/\n          , 4];\n          _b = {};\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TranscriptEvent_event(output[\"TranscriptEvent\"], context)];\n\n        case 3:\n          return [2\n          /*return*/\n          , (_b.TranscriptEvent = _q.sent(), _b)];\n\n        case 4:\n          if (!(output[\"IntentResultEvent\"] !== undefined)) return [3\n          /*break*/\n          , 6];\n          _c = {};\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1IntentResultEvent_event(output[\"IntentResultEvent\"], context)];\n\n        case 5:\n          return [2\n          /*return*/\n          , (_c.IntentResultEvent = _q.sent(), _c)];\n\n        case 6:\n          if (!(output[\"TextResponseEvent\"] !== undefined)) return [3\n          /*break*/\n          , 8];\n          _d = {};\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TextResponseEvent_event(output[\"TextResponseEvent\"], context)];\n\n        case 7:\n          return [2\n          /*return*/\n          , (_d.TextResponseEvent = _q.sent(), _d)];\n\n        case 8:\n          if (!(output[\"AudioResponseEvent\"] !== undefined)) return [3\n          /*break*/\n          , 10];\n          _e = {};\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1AudioResponseEvent_event(output[\"AudioResponseEvent\"], context)];\n\n        case 9:\n          return [2\n          /*return*/\n          , (_e.AudioResponseEvent = _q.sent(), _e)];\n\n        case 10:\n          if (!(output[\"HeartbeatEvent\"] !== undefined)) return [3\n          /*break*/\n          , 12];\n          _f = {};\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1HeartbeatEvent_event(output[\"HeartbeatEvent\"], context)];\n\n        case 11:\n          return [2\n          /*return*/\n          , (_f.HeartbeatEvent = _q.sent(), _f)];\n\n        case 12:\n          if (!(output[\"AccessDeniedException\"] !== undefined)) return [3\n          /*break*/\n          , 14];\n          _g = {};\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1AccessDeniedException_event(output[\"AccessDeniedException\"], context)];\n\n        case 13:\n          return [2\n          /*return*/\n          , (_g.AccessDeniedException = _q.sent(), _g)];\n\n        case 14:\n          if (!(output[\"ResourceNotFoundException\"] !== undefined)) return [3\n          /*break*/\n          , 16];\n          _h = {};\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ResourceNotFoundException_event(output[\"ResourceNotFoundException\"], context)];\n\n        case 15:\n          return [2\n          /*return*/\n          , (_h.ResourceNotFoundException = _q.sent(), _h)];\n\n        case 16:\n          if (!(output[\"ValidationException\"] !== undefined)) return [3\n          /*break*/\n          , 18];\n          _j = {};\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ValidationException_event(output[\"ValidationException\"], context)];\n\n        case 17:\n          return [2\n          /*return*/\n          , (_j.ValidationException = _q.sent(), _j)];\n\n        case 18:\n          if (!(output[\"ThrottlingException\"] !== undefined)) return [3\n          /*break*/\n          , 20];\n          _k = {};\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ThrottlingException_event(output[\"ThrottlingException\"], context)];\n\n        case 19:\n          return [2\n          /*return*/\n          , (_k.ThrottlingException = _q.sent(), _k)];\n\n        case 20:\n          if (!(output[\"InternalServerException\"] !== undefined)) return [3\n          /*break*/\n          , 22];\n          _l = {};\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerException_event(output[\"InternalServerException\"], context)];\n\n        case 21:\n          return [2\n          /*return*/\n          , (_l.InternalServerException = _q.sent(), _l)];\n\n        case 22:\n          if (!(output[\"ConflictException\"] !== undefined)) return [3\n          /*break*/\n          , 24];\n          _m = {};\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ConflictException_event(output[\"ConflictException\"], context)];\n\n        case 23:\n          return [2\n          /*return*/\n          , (_m.ConflictException = _q.sent(), _m)];\n\n        case 24:\n          if (!(output[\"DependencyFailedException\"] !== undefined)) return [3\n          /*break*/\n          , 26];\n          _o = {};\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1DependencyFailedException_event(output[\"DependencyFailedException\"], context)];\n\n        case 25:\n          return [2\n          /*return*/\n          , (_o.DependencyFailedException = _q.sent(), _o)];\n\n        case 26:\n          if (!(output[\"BadGatewayException\"] !== undefined)) return [3\n          /*break*/\n          , 28];\n          _p = {};\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadGatewayException_event(output[\"BadGatewayException\"], context)];\n\n        case 27:\n          return [2\n          /*return*/\n          , (_p.BadGatewayException = _q.sent(), _p)];\n\n        case 28:\n          return [2\n          /*return*/\n          , {\n            $unknown: output\n          }];\n      }\n    });\n  });\n};\n\nvar serializeAws_restJson1AudioInputEvent_event = function (input, context) {\n  var message = {\n    headers: {\n      \":event-type\": {\n        type: \"string\",\n        value: \"AudioInputEvent\"\n      },\n      \":message-type\": {\n        type: \"string\",\n        value: \"event\"\n      }\n    },\n    body: new Uint8Array()\n  };\n  message.body = serializeAws_restJson1AudioInputEvent(input, context);\n  return message;\n};\n\nvar serializeAws_restJson1ConfigurationEvent_event = function (input, context) {\n  var message = {\n    headers: {\n      \":event-type\": {\n        type: \"string\",\n        value: \"ConfigurationEvent\"\n      },\n      \":message-type\": {\n        type: \"string\",\n        value: \"event\"\n      }\n    },\n    body: new Uint8Array()\n  };\n  message.body = serializeAws_restJson1ConfigurationEvent(input, context);\n  return message;\n};\n\nvar serializeAws_restJson1DisconnectionEvent_event = function (input, context) {\n  var message = {\n    headers: {\n      \":event-type\": {\n        type: \"string\",\n        value: \"DisconnectionEvent\"\n      },\n      \":message-type\": {\n        type: \"string\",\n        value: \"event\"\n      }\n    },\n    body: new Uint8Array()\n  };\n  message.body = serializeAws_restJson1DisconnectionEvent(input, context);\n  return message;\n};\n\nvar serializeAws_restJson1DTMFInputEvent_event = function (input, context) {\n  var message = {\n    headers: {\n      \":event-type\": {\n        type: \"string\",\n        value: \"DTMFInputEvent\"\n      },\n      \":message-type\": {\n        type: \"string\",\n        value: \"event\"\n      }\n    },\n    body: new Uint8Array()\n  };\n  message.body = serializeAws_restJson1DTMFInputEvent(input, context);\n  return message;\n};\n\nvar serializeAws_restJson1PlaybackCompletionEvent_event = function (input, context) {\n  var message = {\n    headers: {\n      \":event-type\": {\n        type: \"string\",\n        value: \"PlaybackCompletionEvent\"\n      },\n      \":message-type\": {\n        type: \"string\",\n        value: \"event\"\n      }\n    },\n    body: new Uint8Array()\n  };\n  message.body = serializeAws_restJson1PlaybackCompletionEvent(input, context);\n  return message;\n};\n\nvar serializeAws_restJson1TextInputEvent_event = function (input, context) {\n  var message = {\n    headers: {\n      \":event-type\": {\n        type: \"string\",\n        value: \"TextInputEvent\"\n      },\n      \":message-type\": {\n        type: \"string\",\n        value: \"event\"\n      }\n    },\n    body: new Uint8Array()\n  };\n  message.body = serializeAws_restJson1TextInputEvent(input, context);\n  return message;\n};\n\nvar deserializeAws_restJson1AccessDeniedException_event = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          return [2\n          /*return*/\n          , deserializeAws_restJson1AccessDeniedExceptionResponse(parsedOutput, context)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1AudioResponseEvent_event = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          contents = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = __assign(__assign({}, contents), deserializeAws_restJson1AudioResponseEvent(data, context));\n          return [2\n          /*return*/\n          , contents];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1BadGatewayException_event = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          return [2\n          /*return*/\n          , deserializeAws_restJson1BadGatewayExceptionResponse(parsedOutput, context)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1ConflictException_event = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          return [2\n          /*return*/\n          , deserializeAws_restJson1ConflictExceptionResponse(parsedOutput, context)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1DependencyFailedException_event = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          return [2\n          /*return*/\n          , deserializeAws_restJson1DependencyFailedExceptionResponse(parsedOutput, context)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1HeartbeatEvent_event = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          contents = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = __assign(__assign({}, contents), deserializeAws_restJson1HeartbeatEvent(data, context));\n          return [2\n          /*return*/\n          , contents];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1IntentResultEvent_event = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          contents = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = __assign(__assign({}, contents), deserializeAws_restJson1IntentResultEvent(data, context));\n          return [2\n          /*return*/\n          , contents];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1InternalServerException_event = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          return [2\n          /*return*/\n          , deserializeAws_restJson1InternalServerExceptionResponse(parsedOutput, context)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1PlaybackInterruptionEvent_event = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          contents = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = __assign(__assign({}, contents), deserializeAws_restJson1PlaybackInterruptionEvent(data, context));\n          return [2\n          /*return*/\n          , contents];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1ResourceNotFoundException_event = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          return [2\n          /*return*/\n          , deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1TextResponseEvent_event = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          contents = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = __assign(__assign({}, contents), deserializeAws_restJson1TextResponseEvent(data, context));\n          return [2\n          /*return*/\n          , contents];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1ThrottlingException_event = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          return [2\n          /*return*/\n          , deserializeAws_restJson1ThrottlingExceptionResponse(parsedOutput, context)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1TranscriptEvent_event = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          contents = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = __assign(__assign({}, contents), deserializeAws_restJson1TranscriptEvent(data, context));\n          return [2\n          /*return*/\n          , contents];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1ValidationException_event = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          return [2\n          /*return*/\n          , deserializeAws_restJson1ValidationExceptionResponse(parsedOutput, context)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1AccessDeniedExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"AccessDeniedException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        message: undefined\n      };\n      data = parsedOutput.body;\n\n      if (data.message !== undefined && data.message !== null) {\n        contents.message = __expectString(data.message);\n      }\n\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_restJson1BadGatewayExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"BadGatewayException\",\n        $fault: \"server\",\n        $metadata: deserializeMetadata(parsedOutput),\n        message: undefined\n      };\n      data = parsedOutput.body;\n\n      if (data.message !== undefined && data.message !== null) {\n        contents.message = __expectString(data.message);\n      }\n\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_restJson1ConflictExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"ConflictException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        message: undefined\n      };\n      data = parsedOutput.body;\n\n      if (data.message !== undefined && data.message !== null) {\n        contents.message = __expectString(data.message);\n      }\n\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_restJson1DependencyFailedExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"DependencyFailedException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        message: undefined\n      };\n      data = parsedOutput.body;\n\n      if (data.message !== undefined && data.message !== null) {\n        contents.message = __expectString(data.message);\n      }\n\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_restJson1InternalServerExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"InternalServerException\",\n        $fault: \"server\",\n        $metadata: deserializeMetadata(parsedOutput),\n        message: undefined\n      };\n      data = parsedOutput.body;\n\n      if (data.message !== undefined && data.message !== null) {\n        contents.message = __expectString(data.message);\n      }\n\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_restJson1ResourceNotFoundExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"ResourceNotFoundException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        message: undefined\n      };\n      data = parsedOutput.body;\n\n      if (data.message !== undefined && data.message !== null) {\n        contents.message = __expectString(data.message);\n      }\n\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_restJson1ThrottlingExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"ThrottlingException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        message: undefined\n      };\n      data = parsedOutput.body;\n\n      if (data.message !== undefined && data.message !== null) {\n        contents.message = __expectString(data.message);\n      }\n\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_restJson1ValidationExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"ValidationException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        message: undefined\n      };\n      data = parsedOutput.body;\n\n      if (data.message !== undefined && data.message !== null) {\n        contents.message = __expectString(data.message);\n      }\n\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar serializeAws_restJson1ActiveContext = function (input, context) {\n  return __assign(__assign(__assign({}, input.contextAttributes !== undefined && input.contextAttributes !== null && {\n    contextAttributes: serializeAws_restJson1ActiveContextParametersMap(input.contextAttributes, context)\n  }), input.name !== undefined && input.name !== null && {\n    name: input.name\n  }), input.timeToLive !== undefined && input.timeToLive !== null && {\n    timeToLive: serializeAws_restJson1ActiveContextTimeToLive(input.timeToLive, context)\n  });\n};\n\nvar serializeAws_restJson1ActiveContextParametersMap = function (input, context) {\n  return Object.entries(input).reduce(function (acc, _a) {\n    var _b;\n\n    var _c = __read(_a, 2),\n        key = _c[0],\n        value = _c[1];\n\n    if (value === null) {\n      return acc;\n    }\n\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = value, _b));\n  }, {});\n};\n\nvar serializeAws_restJson1ActiveContextsList = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return serializeAws_restJson1ActiveContext(entry, context);\n  });\n};\n\nvar serializeAws_restJson1ActiveContextTimeToLive = function (input, context) {\n  return __assign(__assign({}, input.timeToLiveInSeconds !== undefined && input.timeToLiveInSeconds !== null && {\n    timeToLiveInSeconds: input.timeToLiveInSeconds\n  }), input.turnsToLive !== undefined && input.turnsToLive !== null && {\n    turnsToLive: input.turnsToLive\n  });\n};\n\nvar serializeAws_restJson1AudioInputEvent = function (input, context) {\n  return __assign(__assign(__assign(__assign({}, input.audioChunk !== undefined && input.audioChunk !== null && {\n    audioChunk: context.base64Encoder(input.audioChunk)\n  }), input.clientTimestampMillis !== undefined && input.clientTimestampMillis !== null && {\n    clientTimestampMillis: input.clientTimestampMillis\n  }), input.contentType !== undefined && input.contentType !== null && {\n    contentType: input.contentType\n  }), input.eventId !== undefined && input.eventId !== null && {\n    eventId: input.eventId\n  });\n};\n\nvar serializeAws_restJson1Button = function (input, context) {\n  return __assign(__assign({}, input.text !== undefined && input.text !== null && {\n    text: input.text\n  }), input.value !== undefined && input.value !== null && {\n    value: input.value\n  });\n};\n\nvar serializeAws_restJson1ButtonsList = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return serializeAws_restJson1Button(entry, context);\n  });\n};\n\nvar serializeAws_restJson1ConfigurationEvent = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.clientTimestampMillis !== undefined && input.clientTimestampMillis !== null && {\n    clientTimestampMillis: input.clientTimestampMillis\n  }), input.disablePlayback !== undefined && input.disablePlayback !== null && {\n    disablePlayback: input.disablePlayback\n  }), input.eventId !== undefined && input.eventId !== null && {\n    eventId: input.eventId\n  }), input.requestAttributes !== undefined && input.requestAttributes !== null && {\n    requestAttributes: serializeAws_restJson1StringMap(input.requestAttributes, context)\n  }), input.responseContentType !== undefined && input.responseContentType !== null && {\n    responseContentType: input.responseContentType\n  }), input.sessionState !== undefined && input.sessionState !== null && {\n    sessionState: serializeAws_restJson1SessionState(input.sessionState, context)\n  }), input.welcomeMessages !== undefined && input.welcomeMessages !== null && {\n    welcomeMessages: serializeAws_restJson1Messages(input.welcomeMessages, context)\n  });\n};\n\nvar serializeAws_restJson1DialogAction = function (input, context) {\n  return __assign(__assign({}, input.slotToElicit !== undefined && input.slotToElicit !== null && {\n    slotToElicit: input.slotToElicit\n  }), input.type !== undefined && input.type !== null && {\n    type: input.type\n  });\n};\n\nvar serializeAws_restJson1DisconnectionEvent = function (input, context) {\n  return __assign(__assign({}, input.clientTimestampMillis !== undefined && input.clientTimestampMillis !== null && {\n    clientTimestampMillis: input.clientTimestampMillis\n  }), input.eventId !== undefined && input.eventId !== null && {\n    eventId: input.eventId\n  });\n};\n\nvar serializeAws_restJson1DTMFInputEvent = function (input, context) {\n  return __assign(__assign(__assign({}, input.clientTimestampMillis !== undefined && input.clientTimestampMillis !== null && {\n    clientTimestampMillis: input.clientTimestampMillis\n  }), input.eventId !== undefined && input.eventId !== null && {\n    eventId: input.eventId\n  }), input.inputCharacter !== undefined && input.inputCharacter !== null && {\n    inputCharacter: input.inputCharacter\n  });\n};\n\nvar serializeAws_restJson1ImageResponseCard = function (input, context) {\n  return __assign(__assign(__assign(__assign({}, input.buttons !== undefined && input.buttons !== null && {\n    buttons: serializeAws_restJson1ButtonsList(input.buttons, context)\n  }), input.imageUrl !== undefined && input.imageUrl !== null && {\n    imageUrl: input.imageUrl\n  }), input.subtitle !== undefined && input.subtitle !== null && {\n    subtitle: input.subtitle\n  }), input.title !== undefined && input.title !== null && {\n    title: input.title\n  });\n};\n\nvar serializeAws_restJson1Intent = function (input, context) {\n  return __assign(__assign(__assign(__assign({}, input.confirmationState !== undefined && input.confirmationState !== null && {\n    confirmationState: input.confirmationState\n  }), input.name !== undefined && input.name !== null && {\n    name: input.name\n  }), input.slots !== undefined && input.slots !== null && {\n    slots: serializeAws_restJson1Slots(input.slots, context)\n  }), input.state !== undefined && input.state !== null && {\n    state: input.state\n  });\n};\n\nvar serializeAws_restJson1Message = function (input, context) {\n  return __assign(__assign(__assign({}, input.content !== undefined && input.content !== null && {\n    content: input.content\n  }), input.contentType !== undefined && input.contentType !== null && {\n    contentType: input.contentType\n  }), input.imageResponseCard !== undefined && input.imageResponseCard !== null && {\n    imageResponseCard: serializeAws_restJson1ImageResponseCard(input.imageResponseCard, context)\n  });\n};\n\nvar serializeAws_restJson1Messages = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return serializeAws_restJson1Message(entry, context);\n  });\n};\n\nvar serializeAws_restJson1PlaybackCompletionEvent = function (input, context) {\n  return __assign(__assign({}, input.clientTimestampMillis !== undefined && input.clientTimestampMillis !== null && {\n    clientTimestampMillis: input.clientTimestampMillis\n  }), input.eventId !== undefined && input.eventId !== null && {\n    eventId: input.eventId\n  });\n};\n\nvar serializeAws_restJson1SessionState = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign({}, input.activeContexts !== undefined && input.activeContexts !== null && {\n    activeContexts: serializeAws_restJson1ActiveContextsList(input.activeContexts, context)\n  }), input.dialogAction !== undefined && input.dialogAction !== null && {\n    dialogAction: serializeAws_restJson1DialogAction(input.dialogAction, context)\n  }), input.intent !== undefined && input.intent !== null && {\n    intent: serializeAws_restJson1Intent(input.intent, context)\n  }), input.originatingRequestId !== undefined && input.originatingRequestId !== null && {\n    originatingRequestId: input.originatingRequestId\n  }), input.sessionAttributes !== undefined && input.sessionAttributes !== null && {\n    sessionAttributes: serializeAws_restJson1StringMap(input.sessionAttributes, context)\n  });\n};\n\nvar serializeAws_restJson1Slot = function (input, context) {\n  return __assign(__assign(__assign({}, input.shape !== undefined && input.shape !== null && {\n    shape: input.shape\n  }), input.value !== undefined && input.value !== null && {\n    value: serializeAws_restJson1Value(input.value, context)\n  }), input.values !== undefined && input.values !== null && {\n    values: serializeAws_restJson1Values(input.values, context)\n  });\n};\n\nvar serializeAws_restJson1Slots = function (input, context) {\n  return Object.entries(input).reduce(function (acc, _a) {\n    var _b;\n\n    var _c = __read(_a, 2),\n        key = _c[0],\n        value = _c[1];\n\n    if (value === null) {\n      return acc;\n    }\n\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = serializeAws_restJson1Slot(value, context), _b));\n  }, {});\n};\n\nvar serializeAws_restJson1StartConversationRequestEventStream = function (input, context) {\n  return StartConversationRequestEventStream.visit(input, {\n    AudioInputEvent: function (value) {\n      return {\n        AudioInputEvent: serializeAws_restJson1AudioInputEvent(value, context)\n      };\n    },\n    ConfigurationEvent: function (value) {\n      return {\n        ConfigurationEvent: serializeAws_restJson1ConfigurationEvent(value, context)\n      };\n    },\n    DTMFInputEvent: function (value) {\n      return {\n        DTMFInputEvent: serializeAws_restJson1DTMFInputEvent(value, context)\n      };\n    },\n    DisconnectionEvent: function (value) {\n      return {\n        DisconnectionEvent: serializeAws_restJson1DisconnectionEvent(value, context)\n      };\n    },\n    PlaybackCompletionEvent: function (value) {\n      return {\n        PlaybackCompletionEvent: serializeAws_restJson1PlaybackCompletionEvent(value, context)\n      };\n    },\n    TextInputEvent: function (value) {\n      return {\n        TextInputEvent: serializeAws_restJson1TextInputEvent(value, context)\n      };\n    },\n    _: function (name, value) {\n      return {\n        name: value\n      };\n    }\n  });\n};\n\nvar serializeAws_restJson1StringList = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return entry;\n  });\n};\n\nvar serializeAws_restJson1StringMap = function (input, context) {\n  return Object.entries(input).reduce(function (acc, _a) {\n    var _b;\n\n    var _c = __read(_a, 2),\n        key = _c[0],\n        value = _c[1];\n\n    if (value === null) {\n      return acc;\n    }\n\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = value, _b));\n  }, {});\n};\n\nvar serializeAws_restJson1TextInputEvent = function (input, context) {\n  return __assign(__assign(__assign({}, input.clientTimestampMillis !== undefined && input.clientTimestampMillis !== null && {\n    clientTimestampMillis: input.clientTimestampMillis\n  }), input.eventId !== undefined && input.eventId !== null && {\n    eventId: input.eventId\n  }), input.text !== undefined && input.text !== null && {\n    text: input.text\n  });\n};\n\nvar serializeAws_restJson1Value = function (input, context) {\n  return __assign(__assign(__assign({}, input.interpretedValue !== undefined && input.interpretedValue !== null && {\n    interpretedValue: input.interpretedValue\n  }), input.originalValue !== undefined && input.originalValue !== null && {\n    originalValue: input.originalValue\n  }), input.resolvedValues !== undefined && input.resolvedValues !== null && {\n    resolvedValues: serializeAws_restJson1StringList(input.resolvedValues, context)\n  });\n};\n\nvar serializeAws_restJson1Values = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return serializeAws_restJson1Slot(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1AccessDeniedException = function (output, context) {\n  return {\n    message: __expectString(output.message)\n  };\n};\n\nvar deserializeAws_restJson1ActiveContext = function (output, context) {\n  return {\n    contextAttributes: output.contextAttributes !== undefined && output.contextAttributes !== null ? deserializeAws_restJson1ActiveContextParametersMap(output.contextAttributes, context) : undefined,\n    name: __expectString(output.name),\n    timeToLive: output.timeToLive !== undefined && output.timeToLive !== null ? deserializeAws_restJson1ActiveContextTimeToLive(output.timeToLive, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1ActiveContextParametersMap = function (output, context) {\n  return Object.entries(output).reduce(function (acc, _a) {\n    var _b;\n\n    var _c = __read(_a, 2),\n        key = _c[0],\n        value = _c[1];\n\n    if (value === null) {\n      return acc;\n    }\n\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = __expectString(value), _b));\n  }, {});\n};\n\nvar deserializeAws_restJson1ActiveContextsList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restJson1ActiveContext(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1ActiveContextTimeToLive = function (output, context) {\n  return {\n    timeToLiveInSeconds: __expectInt32(output.timeToLiveInSeconds),\n    turnsToLive: __expectInt32(output.turnsToLive)\n  };\n};\n\nvar deserializeAws_restJson1AudioResponseEvent = function (output, context) {\n  return {\n    audioChunk: output.audioChunk !== undefined && output.audioChunk !== null ? context.base64Decoder(output.audioChunk) : undefined,\n    contentType: __expectString(output.contentType),\n    eventId: __expectString(output.eventId)\n  };\n};\n\nvar deserializeAws_restJson1BadGatewayException = function (output, context) {\n  return {\n    message: __expectString(output.message)\n  };\n};\n\nvar deserializeAws_restJson1Button = function (output, context) {\n  return {\n    text: __expectString(output.text),\n    value: __expectString(output.value)\n  };\n};\n\nvar deserializeAws_restJson1ButtonsList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restJson1Button(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1ConfidenceScore = function (output, context) {\n  return {\n    score: __limitedParseDouble(output.score)\n  };\n};\n\nvar deserializeAws_restJson1ConflictException = function (output, context) {\n  return {\n    message: __expectString(output.message)\n  };\n};\n\nvar deserializeAws_restJson1DependencyFailedException = function (output, context) {\n  return {\n    message: __expectString(output.message)\n  };\n};\n\nvar deserializeAws_restJson1DialogAction = function (output, context) {\n  return {\n    slotToElicit: __expectString(output.slotToElicit),\n    type: __expectString(output.type)\n  };\n};\n\nvar deserializeAws_restJson1HeartbeatEvent = function (output, context) {\n  return {\n    eventId: __expectString(output.eventId)\n  };\n};\n\nvar deserializeAws_restJson1ImageResponseCard = function (output, context) {\n  return {\n    buttons: output.buttons !== undefined && output.buttons !== null ? deserializeAws_restJson1ButtonsList(output.buttons, context) : undefined,\n    imageUrl: __expectString(output.imageUrl),\n    subtitle: __expectString(output.subtitle),\n    title: __expectString(output.title)\n  };\n};\n\nvar deserializeAws_restJson1Intent = function (output, context) {\n  return {\n    confirmationState: __expectString(output.confirmationState),\n    name: __expectString(output.name),\n    slots: output.slots !== undefined && output.slots !== null ? deserializeAws_restJson1Slots(output.slots, context) : undefined,\n    state: __expectString(output.state)\n  };\n};\n\nvar deserializeAws_restJson1IntentResultEvent = function (output, context) {\n  return {\n    eventId: __expectString(output.eventId),\n    inputMode: __expectString(output.inputMode),\n    interpretations: output.interpretations !== undefined && output.interpretations !== null ? deserializeAws_restJson1Interpretations(output.interpretations, context) : undefined,\n    requestAttributes: output.requestAttributes !== undefined && output.requestAttributes !== null ? deserializeAws_restJson1StringMap(output.requestAttributes, context) : undefined,\n    sessionId: __expectString(output.sessionId),\n    sessionState: output.sessionState !== undefined && output.sessionState !== null ? deserializeAws_restJson1SessionState(output.sessionState, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1InternalServerException = function (output, context) {\n  return {\n    message: __expectString(output.message)\n  };\n};\n\nvar deserializeAws_restJson1Interpretation = function (output, context) {\n  return {\n    intent: output.intent !== undefined && output.intent !== null ? deserializeAws_restJson1Intent(output.intent, context) : undefined,\n    nluConfidence: output.nluConfidence !== undefined && output.nluConfidence !== null ? deserializeAws_restJson1ConfidenceScore(output.nluConfidence, context) : undefined,\n    sentimentResponse: output.sentimentResponse !== undefined && output.sentimentResponse !== null ? deserializeAws_restJson1SentimentResponse(output.sentimentResponse, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1Interpretations = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restJson1Interpretation(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1Message = function (output, context) {\n  return {\n    content: __expectString(output.content),\n    contentType: __expectString(output.contentType),\n    imageResponseCard: output.imageResponseCard !== undefined && output.imageResponseCard !== null ? deserializeAws_restJson1ImageResponseCard(output.imageResponseCard, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1Messages = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restJson1Message(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1PlaybackInterruptionEvent = function (output, context) {\n  return {\n    causedByEventId: __expectString(output.causedByEventId),\n    eventId: __expectString(output.eventId),\n    eventReason: __expectString(output.eventReason)\n  };\n};\n\nvar deserializeAws_restJson1ResourceNotFoundException = function (output, context) {\n  return {\n    message: __expectString(output.message)\n  };\n};\n\nvar deserializeAws_restJson1SentimentResponse = function (output, context) {\n  return {\n    sentiment: __expectString(output.sentiment),\n    sentimentScore: output.sentimentScore !== undefined && output.sentimentScore !== null ? deserializeAws_restJson1SentimentScore(output.sentimentScore, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1SentimentScore = function (output, context) {\n  return {\n    mixed: __limitedParseDouble(output.mixed),\n    negative: __limitedParseDouble(output.negative),\n    neutral: __limitedParseDouble(output.neutral),\n    positive: __limitedParseDouble(output.positive)\n  };\n};\n\nvar deserializeAws_restJson1SessionState = function (output, context) {\n  return {\n    activeContexts: output.activeContexts !== undefined && output.activeContexts !== null ? deserializeAws_restJson1ActiveContextsList(output.activeContexts, context) : undefined,\n    dialogAction: output.dialogAction !== undefined && output.dialogAction !== null ? deserializeAws_restJson1DialogAction(output.dialogAction, context) : undefined,\n    intent: output.intent !== undefined && output.intent !== null ? deserializeAws_restJson1Intent(output.intent, context) : undefined,\n    originatingRequestId: __expectString(output.originatingRequestId),\n    sessionAttributes: output.sessionAttributes !== undefined && output.sessionAttributes !== null ? deserializeAws_restJson1StringMap(output.sessionAttributes, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1Slot = function (output, context) {\n  return {\n    shape: __expectString(output.shape),\n    value: output.value !== undefined && output.value !== null ? deserializeAws_restJson1Value(output.value, context) : undefined,\n    values: output.values !== undefined && output.values !== null ? deserializeAws_restJson1Values(output.values, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1Slots = function (output, context) {\n  return Object.entries(output).reduce(function (acc, _a) {\n    var _b;\n\n    var _c = __read(_a, 2),\n        key = _c[0],\n        value = _c[1];\n\n    if (value === null) {\n      return acc;\n    }\n\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = deserializeAws_restJson1Slot(value, context), _b));\n  }, {});\n};\n\nvar deserializeAws_restJson1StartConversationResponseEventStream = function (output, context) {\n  if (output.AccessDeniedException !== undefined && output.AccessDeniedException !== null) {\n    return {\n      AccessDeniedException: deserializeAws_restJson1AccessDeniedException(output.AccessDeniedException, context)\n    };\n  }\n\n  if (output.AudioResponseEvent !== undefined && output.AudioResponseEvent !== null) {\n    return {\n      AudioResponseEvent: deserializeAws_restJson1AudioResponseEvent(output.AudioResponseEvent, context)\n    };\n  }\n\n  if (output.BadGatewayException !== undefined && output.BadGatewayException !== null) {\n    return {\n      BadGatewayException: deserializeAws_restJson1BadGatewayException(output.BadGatewayException, context)\n    };\n  }\n\n  if (output.ConflictException !== undefined && output.ConflictException !== null) {\n    return {\n      ConflictException: deserializeAws_restJson1ConflictException(output.ConflictException, context)\n    };\n  }\n\n  if (output.DependencyFailedException !== undefined && output.DependencyFailedException !== null) {\n    return {\n      DependencyFailedException: deserializeAws_restJson1DependencyFailedException(output.DependencyFailedException, context)\n    };\n  }\n\n  if (output.HeartbeatEvent !== undefined && output.HeartbeatEvent !== null) {\n    return {\n      HeartbeatEvent: deserializeAws_restJson1HeartbeatEvent(output.HeartbeatEvent, context)\n    };\n  }\n\n  if (output.IntentResultEvent !== undefined && output.IntentResultEvent !== null) {\n    return {\n      IntentResultEvent: deserializeAws_restJson1IntentResultEvent(output.IntentResultEvent, context)\n    };\n  }\n\n  if (output.InternalServerException !== undefined && output.InternalServerException !== null) {\n    return {\n      InternalServerException: deserializeAws_restJson1InternalServerException(output.InternalServerException, context)\n    };\n  }\n\n  if (output.PlaybackInterruptionEvent !== undefined && output.PlaybackInterruptionEvent !== null) {\n    return {\n      PlaybackInterruptionEvent: deserializeAws_restJson1PlaybackInterruptionEvent(output.PlaybackInterruptionEvent, context)\n    };\n  }\n\n  if (output.ResourceNotFoundException !== undefined && output.ResourceNotFoundException !== null) {\n    return {\n      ResourceNotFoundException: deserializeAws_restJson1ResourceNotFoundException(output.ResourceNotFoundException, context)\n    };\n  }\n\n  if (output.TextResponseEvent !== undefined && output.TextResponseEvent !== null) {\n    return {\n      TextResponseEvent: deserializeAws_restJson1TextResponseEvent(output.TextResponseEvent, context)\n    };\n  }\n\n  if (output.ThrottlingException !== undefined && output.ThrottlingException !== null) {\n    return {\n      ThrottlingException: deserializeAws_restJson1ThrottlingException(output.ThrottlingException, context)\n    };\n  }\n\n  if (output.TranscriptEvent !== undefined && output.TranscriptEvent !== null) {\n    return {\n      TranscriptEvent: deserializeAws_restJson1TranscriptEvent(output.TranscriptEvent, context)\n    };\n  }\n\n  if (output.ValidationException !== undefined && output.ValidationException !== null) {\n    return {\n      ValidationException: deserializeAws_restJson1ValidationException(output.ValidationException, context)\n    };\n  }\n\n  return {\n    $unknown: Object.entries(output)[0]\n  };\n};\n\nvar deserializeAws_restJson1StringList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return __expectString(entry);\n  });\n};\n\nvar deserializeAws_restJson1StringMap = function (output, context) {\n  return Object.entries(output).reduce(function (acc, _a) {\n    var _b;\n\n    var _c = __read(_a, 2),\n        key = _c[0],\n        value = _c[1];\n\n    if (value === null) {\n      return acc;\n    }\n\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = __expectString(value), _b));\n  }, {});\n};\n\nvar deserializeAws_restJson1TextResponseEvent = function (output, context) {\n  return {\n    eventId: __expectString(output.eventId),\n    messages: output.messages !== undefined && output.messages !== null ? deserializeAws_restJson1Messages(output.messages, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1ThrottlingException = function (output, context) {\n  return {\n    message: __expectString(output.message)\n  };\n};\n\nvar deserializeAws_restJson1TranscriptEvent = function (output, context) {\n  return {\n    eventId: __expectString(output.eventId),\n    transcript: __expectString(output.transcript)\n  };\n};\n\nvar deserializeAws_restJson1ValidationException = function (output, context) {\n  return {\n    message: __expectString(output.message)\n  };\n};\n\nvar deserializeAws_restJson1Value = function (output, context) {\n  return {\n    interpretedValue: __expectString(output.interpretedValue),\n    originalValue: __expectString(output.originalValue),\n    resolvedValues: output.resolvedValues !== undefined && output.resolvedValues !== null ? deserializeAws_restJson1StringList(output.resolvedValues, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1Values = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restJson1Slot(entry, context);\n  });\n};\n\nvar deserializeMetadata = function (output) {\n  var _a;\n\n  return {\n    httpStatusCode: output.statusCode,\n    requestId: (_a = output.headers[\"x-amzn-requestid\"]) !== null && _a !== void 0 ? _a : output.headers[\"x-amzn-request-id\"],\n    extendedRequestId: output.headers[\"x-amz-id-2\"],\n    cfId: output.headers[\"x-amz-cf-id\"]\n  };\n}; // Collect low-level response body stream to Uint8Array.\n\n\nvar collectBody = function (streamBody, context) {\n  if (streamBody === void 0) {\n    streamBody = new Uint8Array();\n  }\n\n  if (streamBody instanceof Uint8Array) {\n    return Promise.resolve(streamBody);\n  }\n\n  return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n}; // Encode Uint8Array data into string with utf-8.\n\n\nvar collectBodyString = function (streamBody, context) {\n  return collectBody(streamBody, context).then(function (body) {\n    return context.utf8Encoder(body);\n  });\n};\n\nvar isSerializableHeaderValue = function (value) {\n  return value !== undefined && value !== null && value !== \"\" && (!Object.getOwnPropertyNames(value).includes(\"length\") || value.length != 0) && (!Object.getOwnPropertyNames(value).includes(\"size\") || value.size != 0);\n};\n\nvar parseBody = function (streamBody, context) {\n  return collectBodyString(streamBody, context).then(function (encoded) {\n    if (encoded.length) {\n      return JSON.parse(encoded);\n    }\n\n    return {};\n  });\n};\n/**\n * Load an error code for the aws.rest-json-1.1 protocol.\n */\n\n\nvar loadRestJsonErrorCode = function (output, data) {\n  var findKey = function (object, key) {\n    return Object.keys(object).find(function (k) {\n      return k.toLowerCase() === key.toLowerCase();\n    });\n  };\n\n  var sanitizeErrorCode = function (rawValue) {\n    var cleanValue = rawValue;\n\n    if (cleanValue.indexOf(\":\") >= 0) {\n      cleanValue = cleanValue.split(\":\")[0];\n    }\n\n    if (cleanValue.indexOf(\"#\") >= 0) {\n      cleanValue = cleanValue.split(\"#\")[1];\n    }\n\n    return cleanValue;\n  };\n\n  var headerKey = findKey(output.headers, \"x-amzn-errortype\");\n\n  if (headerKey !== undefined) {\n    return sanitizeErrorCode(output.headers[headerKey]);\n  }\n\n  if (data.code !== undefined) {\n    return sanitizeErrorCode(data.code);\n  }\n\n  if (data[\"__type\"] !== undefined) {\n    return sanitizeErrorCode(data[\"__type\"]);\n  }\n\n  return \"\";\n};","map":{"version":3,"mappings":"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","names":["StartConversationRequestEventStream","HttpRequest","__HttpRequest","expectInt32","__expectInt32","expectNonNull","__expectNonNull","expectObject","__expectObject","expectString","__expectString","extendedEncodeURIComponent","__extendedEncodeURIComponent","limitedParseDouble","__limitedParseDouble","serializeAws_restJson1DeleteSessionCommand","input","context","endpoint","_a","_c","hostname","_b","protocol","port","basePath","headers","resolvedPath","endsWith","slice","botId","undefined","labelValue","length","Error","replace","botAliasId","localeId","sessionId","method","path","body","serializeAws_restJson1GetSessionCommand","serializeAws_restJson1PutSessionCommand","isSerializableHeaderValue","responseContentType","responsecontenttype","JSON","stringify","__assign","messages","serializeAws_restJson1Messages","requestAttributes","serializeAws_restJson1StringMap","sessionState","serializeAws_restJson1SessionState","serializeAws_restJson1RecognizeTextCommand","text","serializeAws_restJson1RecognizeUtteranceCommand","requestContentType","inputStream","serializeAws_restJson1StartConversationCommand","conversationMode","requestEventStream","eventStreamMarshaller","serialize","event","deserializeAws_restJson1DeleteSessionCommand","output","statusCode","deserializeAws_restJson1DeleteSessionCommandError","contents","$metadata","deserializeMetadata","parseBody","data","Promise","resolve","parsedOutput","_j","_k","errorCode","loadRestJsonErrorCode","deserializeAws_restJson1AccessDeniedExceptionResponse","response","name","deserializeAws_restJson1ConflictExceptionResponse","deserializeAws_restJson1InternalServerExceptionResponse","deserializeAws_restJson1ResourceNotFoundExceptionResponse","deserializeAws_restJson1ThrottlingExceptionResponse","deserializeAws_restJson1ValidationExceptionResponse","parsedBody","code","Code","message","Message","$fault","reject","Object","assign","deserializeAws_restJson1GetSessionCommand","deserializeAws_restJson1GetSessionCommandError","interpretations","deserializeAws_restJson1Interpretations","deserializeAws_restJson1Messages","deserializeAws_restJson1SessionState","_h","deserializeAws_restJson1PutSessionCommand","deserializeAws_restJson1PutSessionCommandError","audioStream","contentType","_l","_m","deserializeAws_restJson1BadGatewayExceptionResponse","deserializeAws_restJson1DependencyFailedExceptionResponse","deserializeAws_restJson1RecognizeTextCommand","deserializeAws_restJson1RecognizeTextCommandError","deserializeAws_restJson1StringMap","deserializeAws_restJson1RecognizeUtteranceCommand","deserializeAws_restJson1RecognizeUtteranceCommandError","inputMode","inputTranscript","deserializeAws_restJson1StartConversationCommand","deserializeAws_restJson1StartConversationCommandError","responseEventStream","deserialize","eventName","keys","eventHeaders","entries","reduce","accummulator","curr","value","eventMessage","parsedEvent","deserializeAws_restJson1StartConversationResponseEventStream_event","_g","serializeAws_restJson1StartConversationRequestEventStream_event","visit","ConfigurationEvent","AudioInputEvent","DTMFInputEvent","TextInputEvent","PlaybackCompletionEvent","DisconnectionEvent","_","deserializeAws_restJson1PlaybackInterruptionEvent_event","_q","deserializeAws_restJson1TranscriptEvent_event","deserializeAws_restJson1IntentResultEvent_event","deserializeAws_restJson1TextResponseEvent_event","_d","deserializeAws_restJson1AudioResponseEvent_event","_e","deserializeAws_restJson1HeartbeatEvent_event","_f","deserializeAws_restJson1AccessDeniedException_event","deserializeAws_restJson1ResourceNotFoundException_event","deserializeAws_restJson1ValidationException_event","deserializeAws_restJson1ThrottlingException_event","deserializeAws_restJson1InternalServerException_event","deserializeAws_restJson1ConflictException_event","deserializeAws_restJson1DependencyFailedException_event","_o","deserializeAws_restJson1BadGatewayException_event","_p","$unknown","serializeAws_restJson1AudioInputEvent_event","type","Uint8Array","serializeAws_restJson1AudioInputEvent","serializeAws_restJson1ConfigurationEvent_event","serializeAws_restJson1ConfigurationEvent","serializeAws_restJson1DisconnectionEvent_event","serializeAws_restJson1DisconnectionEvent","serializeAws_restJson1DTMFInputEvent_event","serializeAws_restJson1DTMFInputEvent","serializeAws_restJson1PlaybackCompletionEvent_event","serializeAws_restJson1PlaybackCompletionEvent","serializeAws_restJson1TextInputEvent_event","serializeAws_restJson1TextInputEvent","deserializeAws_restJson1AudioResponseEvent","deserializeAws_restJson1HeartbeatEvent","deserializeAws_restJson1IntentResultEvent","deserializeAws_restJson1PlaybackInterruptionEvent","deserializeAws_restJson1TextResponseEvent","deserializeAws_restJson1TranscriptEvent","serializeAws_restJson1ActiveContext","contextAttributes","serializeAws_restJson1ActiveContextParametersMap","timeToLive","serializeAws_restJson1ActiveContextTimeToLive","acc","key","serializeAws_restJson1ActiveContextsList","filter","e","map","entry","timeToLiveInSeconds","turnsToLive","audioChunk","base64Encoder","clientTimestampMillis","eventId","serializeAws_restJson1Button","serializeAws_restJson1ButtonsList","disablePlayback","welcomeMessages","serializeAws_restJson1DialogAction","slotToElicit","inputCharacter","serializeAws_restJson1ImageResponseCard","buttons","imageUrl","subtitle","title","serializeAws_restJson1Intent","confirmationState","slots","serializeAws_restJson1Slots","state","serializeAws_restJson1Message","content","imageResponseCard","activeContexts","dialogAction","intent","originatingRequestId","sessionAttributes","serializeAws_restJson1Slot","shape","serializeAws_restJson1Value","values","serializeAws_restJson1Values","serializeAws_restJson1StartConversationRequestEventStream","serializeAws_restJson1StringList","interpretedValue","originalValue","resolvedValues","deserializeAws_restJson1AccessDeniedException","deserializeAws_restJson1ActiveContext","deserializeAws_restJson1ActiveContextParametersMap","deserializeAws_restJson1ActiveContextTimeToLive","deserializeAws_restJson1ActiveContextsList","base64Decoder","deserializeAws_restJson1BadGatewayException","deserializeAws_restJson1Button","deserializeAws_restJson1ButtonsList","deserializeAws_restJson1ConfidenceScore","score","deserializeAws_restJson1ConflictException","deserializeAws_restJson1DependencyFailedException","deserializeAws_restJson1DialogAction","deserializeAws_restJson1ImageResponseCard","deserializeAws_restJson1Intent","deserializeAws_restJson1Slots","deserializeAws_restJson1InternalServerException","deserializeAws_restJson1Interpretation","nluConfidence","sentimentResponse","deserializeAws_restJson1SentimentResponse","deserializeAws_restJson1Message","causedByEventId","eventReason","deserializeAws_restJson1ResourceNotFoundException","sentiment","sentimentScore","deserializeAws_restJson1SentimentScore","mixed","negative","neutral","positive","deserializeAws_restJson1Slot","deserializeAws_restJson1Value","deserializeAws_restJson1Values","deserializeAws_restJson1StartConversationResponseEventStream","AccessDeniedException","AudioResponseEvent","BadGatewayException","ConflictException","DependencyFailedException","HeartbeatEvent","IntentResultEvent","InternalServerException","PlaybackInterruptionEvent","ResourceNotFoundException","TextResponseEvent","ThrottlingException","deserializeAws_restJson1ThrottlingException","TranscriptEvent","ValidationException","deserializeAws_restJson1ValidationException","deserializeAws_restJson1StringList","transcript","httpStatusCode","requestId","extendedRequestId","cfId","collectBody","streamBody","streamCollector","collectBodyString","then","utf8Encoder","getOwnPropertyNames","includes","size","encoded","parse","findKey","object","find","k","toLowerCase","sanitizeErrorCode","rawValue","cleanValue","indexOf","split","headerKey"],"sources":["/Users/dylanbienstock/Documents/cs98/hack-a-thing-1/amplifyapp/node_modules/@aws-sdk/client-lex-runtime-v2/protocols/Aws_restJson1.ts"],"sourcesContent":["import { DeleteSessionCommandInput, DeleteSessionCommandOutput } from \"../commands/DeleteSessionCommand\";\nimport { GetSessionCommandInput, GetSessionCommandOutput } from \"../commands/GetSessionCommand\";\nimport { PutSessionCommandInput, PutSessionCommandOutput } from \"../commands/PutSessionCommand\";\nimport { RecognizeTextCommandInput, RecognizeTextCommandOutput } from \"../commands/RecognizeTextCommand\";\nimport { RecognizeUtteranceCommandInput, RecognizeUtteranceCommandOutput } from \"../commands/RecognizeUtteranceCommand\";\nimport { StartConversationCommandInput, StartConversationCommandOutput } from \"../commands/StartConversationCommand\";\nimport {\n  AccessDeniedException,\n  ActiveContext,\n  ActiveContextTimeToLive,\n  AudioInputEvent,\n  AudioResponseEvent,\n  BadGatewayException,\n  Button,\n  ConfidenceScore,\n  ConfigurationEvent,\n  ConflictException,\n  DTMFInputEvent,\n  DependencyFailedException,\n  DialogAction,\n  DisconnectionEvent,\n  HeartbeatEvent,\n  ImageResponseCard,\n  Intent,\n  IntentResultEvent,\n  InternalServerException,\n  Interpretation,\n  Message,\n  PlaybackCompletionEvent,\n  PlaybackInterruptionEvent,\n  ResourceNotFoundException,\n  SentimentResponse,\n  SentimentScore,\n  SessionState,\n  Slot,\n  StartConversationRequestEventStream,\n  StartConversationResponseEventStream,\n  TextInputEvent,\n  TextResponseEvent,\n  ThrottlingException,\n  TranscriptEvent,\n  ValidationException,\n  Value,\n} from \"../models/models_0\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport {\n  expectInt32 as __expectInt32,\n  expectNonNull as __expectNonNull,\n  expectObject as __expectObject,\n  expectString as __expectString,\n  extendedEncodeURIComponent as __extendedEncodeURIComponent,\n  limitedParseDouble as __limitedParseDouble,\n} from \"@aws-sdk/smithy-client\";\nimport {\n  Endpoint as __Endpoint,\n  EventStreamSerdeContext as __EventStreamSerdeContext,\n  Message as __Message,\n  MetadataBearer as __MetadataBearer,\n  ResponseMetadata as __ResponseMetadata,\n  SerdeContext as __SerdeContext,\n  SmithyException as __SmithyException,\n} from \"@aws-sdk/types\";\n\nexport const serializeAws_restJson1DeleteSessionCommand = async (\n  input: DeleteSessionCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n  const headers: any = {};\n  let resolvedPath =\n    `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` +\n    \"/bots/{botId}/botAliases/{botAliasId}/botLocales/{localeId}/sessions/{sessionId}\";\n  if (input.botId !== undefined) {\n    const labelValue: string = input.botId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: botId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{botId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: botId.\");\n  }\n  if (input.botAliasId !== undefined) {\n    const labelValue: string = input.botAliasId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: botAliasId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{botAliasId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: botAliasId.\");\n  }\n  if (input.localeId !== undefined) {\n    const labelValue: string = input.localeId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: localeId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{localeId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: localeId.\");\n  }\n  if (input.sessionId !== undefined) {\n    const labelValue: string = input.sessionId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: sessionId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{sessionId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: sessionId.\");\n  }\n  let body: any;\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"DELETE\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetSessionCommand = async (\n  input: GetSessionCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n  const headers: any = {};\n  let resolvedPath =\n    `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` +\n    \"/bots/{botId}/botAliases/{botAliasId}/botLocales/{localeId}/sessions/{sessionId}\";\n  if (input.botId !== undefined) {\n    const labelValue: string = input.botId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: botId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{botId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: botId.\");\n  }\n  if (input.botAliasId !== undefined) {\n    const labelValue: string = input.botAliasId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: botAliasId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{botAliasId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: botAliasId.\");\n  }\n  if (input.localeId !== undefined) {\n    const labelValue: string = input.localeId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: localeId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{localeId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: localeId.\");\n  }\n  if (input.sessionId !== undefined) {\n    const labelValue: string = input.sessionId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: sessionId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{sessionId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: sessionId.\");\n  }\n  let body: any;\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1PutSessionCommand = async (\n  input: PutSessionCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n  const headers: any = {\n    \"content-type\": \"application/json\",\n    ...(isSerializableHeaderValue(input.responseContentType) && { responsecontenttype: input.responseContentType! }),\n  };\n  let resolvedPath =\n    `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` +\n    \"/bots/{botId}/botAliases/{botAliasId}/botLocales/{localeId}/sessions/{sessionId}\";\n  if (input.botId !== undefined) {\n    const labelValue: string = input.botId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: botId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{botId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: botId.\");\n  }\n  if (input.botAliasId !== undefined) {\n    const labelValue: string = input.botAliasId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: botAliasId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{botAliasId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: botAliasId.\");\n  }\n  if (input.localeId !== undefined) {\n    const labelValue: string = input.localeId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: localeId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{localeId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: localeId.\");\n  }\n  if (input.sessionId !== undefined) {\n    const labelValue: string = input.sessionId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: sessionId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{sessionId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: sessionId.\");\n  }\n  let body: any;\n  body = JSON.stringify({\n    ...(input.messages !== undefined &&\n      input.messages !== null && { messages: serializeAws_restJson1Messages(input.messages, context) }),\n    ...(input.requestAttributes !== undefined &&\n      input.requestAttributes !== null && {\n        requestAttributes: serializeAws_restJson1StringMap(input.requestAttributes, context),\n      }),\n    ...(input.sessionState !== undefined &&\n      input.sessionState !== null && { sessionState: serializeAws_restJson1SessionState(input.sessionState, context) }),\n  });\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"POST\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1RecognizeTextCommand = async (\n  input: RecognizeTextCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath =\n    `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` +\n    \"/bots/{botId}/botAliases/{botAliasId}/botLocales/{localeId}/sessions/{sessionId}/text\";\n  if (input.botId !== undefined) {\n    const labelValue: string = input.botId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: botId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{botId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: botId.\");\n  }\n  if (input.botAliasId !== undefined) {\n    const labelValue: string = input.botAliasId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: botAliasId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{botAliasId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: botAliasId.\");\n  }\n  if (input.localeId !== undefined) {\n    const labelValue: string = input.localeId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: localeId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{localeId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: localeId.\");\n  }\n  if (input.sessionId !== undefined) {\n    const labelValue: string = input.sessionId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: sessionId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{sessionId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: sessionId.\");\n  }\n  let body: any;\n  body = JSON.stringify({\n    ...(input.requestAttributes !== undefined &&\n      input.requestAttributes !== null && {\n        requestAttributes: serializeAws_restJson1StringMap(input.requestAttributes, context),\n      }),\n    ...(input.sessionState !== undefined &&\n      input.sessionState !== null && { sessionState: serializeAws_restJson1SessionState(input.sessionState, context) }),\n    ...(input.text !== undefined && input.text !== null && { text: input.text }),\n  });\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"POST\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1RecognizeUtteranceCommand = async (\n  input: RecognizeUtteranceCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n  const headers: any = {\n    \"content-type\": \"application/octet-stream\",\n    \"x-amz-content-sha256\": \"UNSIGNED-PAYLOAD\",\n    ...(isSerializableHeaderValue(input.sessionState) && { \"x-amz-lex-session-state\": input.sessionState! }),\n    ...(isSerializableHeaderValue(input.requestAttributes) && {\n      \"x-amz-lex-request-attributes\": input.requestAttributes!,\n    }),\n    ...(isSerializableHeaderValue(input.requestContentType) && { \"content-type\": input.requestContentType! }),\n    ...(isSerializableHeaderValue(input.responseContentType) && {\n      \"response-content-type\": input.responseContentType!,\n    }),\n  };\n  let resolvedPath =\n    `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` +\n    \"/bots/{botId}/botAliases/{botAliasId}/botLocales/{localeId}/sessions/{sessionId}/utterance\";\n  if (input.botId !== undefined) {\n    const labelValue: string = input.botId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: botId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{botId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: botId.\");\n  }\n  if (input.botAliasId !== undefined) {\n    const labelValue: string = input.botAliasId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: botAliasId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{botAliasId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: botAliasId.\");\n  }\n  if (input.localeId !== undefined) {\n    const labelValue: string = input.localeId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: localeId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{localeId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: localeId.\");\n  }\n  if (input.sessionId !== undefined) {\n    const labelValue: string = input.sessionId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: sessionId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{sessionId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: sessionId.\");\n  }\n  let body: any;\n  if (input.inputStream !== undefined) {\n    body = input.inputStream;\n  }\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"POST\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1StartConversationCommand = async (\n  input: StartConversationCommandInput,\n  context: __SerdeContext & __EventStreamSerdeContext\n): Promise<__HttpRequest> => {\n  const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n  const headers: any = {\n    ...(isSerializableHeaderValue(input.conversationMode) && {\n      \"x-amz-lex-conversation-mode\": input.conversationMode!,\n    }),\n  };\n  let resolvedPath =\n    `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` +\n    \"/bots/{botId}/botAliases/{botAliasId}/botLocales/{localeId}/sessions/{sessionId}/conversation\";\n  if (input.botId !== undefined) {\n    const labelValue: string = input.botId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: botId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{botId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: botId.\");\n  }\n  if (input.botAliasId !== undefined) {\n    const labelValue: string = input.botAliasId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: botAliasId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{botAliasId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: botAliasId.\");\n  }\n  if (input.localeId !== undefined) {\n    const labelValue: string = input.localeId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: localeId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{localeId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: localeId.\");\n  }\n  if (input.sessionId !== undefined) {\n    const labelValue: string = input.sessionId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: sessionId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{sessionId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: sessionId.\");\n  }\n  let body: any;\n  if (input.requestEventStream !== undefined) {\n    body = context.eventStreamMarshaller.serialize(input.requestEventStream, (event) =>\n      serializeAws_restJson1StartConversationRequestEventStream_event(event, context)\n    );\n  }\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"POST\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const deserializeAws_restJson1DeleteSessionCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteSessionCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1DeleteSessionCommandError(output, context);\n  }\n  const contents: DeleteSessionCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    botAliasId: undefined,\n    botId: undefined,\n    localeId: undefined,\n    sessionId: undefined,\n  };\n  const data: { [key: string]: any } = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n  if (data.botAliasId !== undefined && data.botAliasId !== null) {\n    contents.botAliasId = __expectString(data.botAliasId);\n  }\n  if (data.botId !== undefined && data.botId !== null) {\n    contents.botId = __expectString(data.botId);\n  }\n  if (data.localeId !== undefined && data.localeId !== null) {\n    contents.localeId = __expectString(data.localeId);\n  }\n  if (data.sessionId !== undefined && data.sessionId !== null) {\n    contents.sessionId = __expectString(data.sessionId);\n  }\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1DeleteSessionCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteSessionCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"AccessDeniedException\":\n    case \"com.amazonaws.lexruntimev2#AccessDeniedException\":\n      response = {\n        ...(await deserializeAws_restJson1AccessDeniedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ConflictException\":\n    case \"com.amazonaws.lexruntimev2#ConflictException\":\n      response = {\n        ...(await deserializeAws_restJson1ConflictExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerException\":\n    case \"com.amazonaws.lexruntimev2#InternalServerException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.lexruntimev2#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ThrottlingException\":\n    case \"com.amazonaws.lexruntimev2#ThrottlingException\":\n      response = {\n        ...(await deserializeAws_restJson1ThrottlingExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ValidationException\":\n    case \"com.amazonaws.lexruntimev2#ValidationException\":\n      response = {\n        ...(await deserializeAws_restJson1ValidationExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetSessionCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetSessionCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetSessionCommandError(output, context);\n  }\n  const contents: GetSessionCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    interpretations: undefined,\n    messages: undefined,\n    sessionId: undefined,\n    sessionState: undefined,\n  };\n  const data: { [key: string]: any } = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n  if (data.interpretations !== undefined && data.interpretations !== null) {\n    contents.interpretations = deserializeAws_restJson1Interpretations(data.interpretations, context);\n  }\n  if (data.messages !== undefined && data.messages !== null) {\n    contents.messages = deserializeAws_restJson1Messages(data.messages, context);\n  }\n  if (data.sessionId !== undefined && data.sessionId !== null) {\n    contents.sessionId = __expectString(data.sessionId);\n  }\n  if (data.sessionState !== undefined && data.sessionState !== null) {\n    contents.sessionState = deserializeAws_restJson1SessionState(data.sessionState, context);\n  }\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetSessionCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetSessionCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"AccessDeniedException\":\n    case \"com.amazonaws.lexruntimev2#AccessDeniedException\":\n      response = {\n        ...(await deserializeAws_restJson1AccessDeniedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerException\":\n    case \"com.amazonaws.lexruntimev2#InternalServerException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.lexruntimev2#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ThrottlingException\":\n    case \"com.amazonaws.lexruntimev2#ThrottlingException\":\n      response = {\n        ...(await deserializeAws_restJson1ThrottlingExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ValidationException\":\n    case \"com.amazonaws.lexruntimev2#ValidationException\":\n      response = {\n        ...(await deserializeAws_restJson1ValidationExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1PutSessionCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutSessionCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1PutSessionCommandError(output, context);\n  }\n  const contents: PutSessionCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    audioStream: undefined,\n    contentType: undefined,\n    messages: undefined,\n    requestAttributes: undefined,\n    sessionId: undefined,\n    sessionState: undefined,\n  };\n  if (output.headers[\"content-type\"] !== undefined) {\n    contents.contentType = output.headers[\"content-type\"];\n  }\n  if (output.headers[\"x-amz-lex-messages\"] !== undefined) {\n    contents.messages = output.headers[\"x-amz-lex-messages\"];\n  }\n  if (output.headers[\"x-amz-lex-session-state\"] !== undefined) {\n    contents.sessionState = output.headers[\"x-amz-lex-session-state\"];\n  }\n  if (output.headers[\"x-amz-lex-request-attributes\"] !== undefined) {\n    contents.requestAttributes = output.headers[\"x-amz-lex-request-attributes\"];\n  }\n  if (output.headers[\"x-amz-lex-session-id\"] !== undefined) {\n    contents.sessionId = output.headers[\"x-amz-lex-session-id\"];\n  }\n  const data: any = output.body;\n  contents.audioStream = data;\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1PutSessionCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutSessionCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"AccessDeniedException\":\n    case \"com.amazonaws.lexruntimev2#AccessDeniedException\":\n      response = {\n        ...(await deserializeAws_restJson1AccessDeniedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"BadGatewayException\":\n    case \"com.amazonaws.lexruntimev2#BadGatewayException\":\n      response = {\n        ...(await deserializeAws_restJson1BadGatewayExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ConflictException\":\n    case \"com.amazonaws.lexruntimev2#ConflictException\":\n      response = {\n        ...(await deserializeAws_restJson1ConflictExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"DependencyFailedException\":\n    case \"com.amazonaws.lexruntimev2#DependencyFailedException\":\n      response = {\n        ...(await deserializeAws_restJson1DependencyFailedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerException\":\n    case \"com.amazonaws.lexruntimev2#InternalServerException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.lexruntimev2#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ThrottlingException\":\n    case \"com.amazonaws.lexruntimev2#ThrottlingException\":\n      response = {\n        ...(await deserializeAws_restJson1ThrottlingExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ValidationException\":\n    case \"com.amazonaws.lexruntimev2#ValidationException\":\n      response = {\n        ...(await deserializeAws_restJson1ValidationExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1RecognizeTextCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<RecognizeTextCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1RecognizeTextCommandError(output, context);\n  }\n  const contents: RecognizeTextCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    interpretations: undefined,\n    messages: undefined,\n    requestAttributes: undefined,\n    sessionId: undefined,\n    sessionState: undefined,\n  };\n  const data: { [key: string]: any } = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n  if (data.interpretations !== undefined && data.interpretations !== null) {\n    contents.interpretations = deserializeAws_restJson1Interpretations(data.interpretations, context);\n  }\n  if (data.messages !== undefined && data.messages !== null) {\n    contents.messages = deserializeAws_restJson1Messages(data.messages, context);\n  }\n  if (data.requestAttributes !== undefined && data.requestAttributes !== null) {\n    contents.requestAttributes = deserializeAws_restJson1StringMap(data.requestAttributes, context);\n  }\n  if (data.sessionId !== undefined && data.sessionId !== null) {\n    contents.sessionId = __expectString(data.sessionId);\n  }\n  if (data.sessionState !== undefined && data.sessionState !== null) {\n    contents.sessionState = deserializeAws_restJson1SessionState(data.sessionState, context);\n  }\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1RecognizeTextCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<RecognizeTextCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"AccessDeniedException\":\n    case \"com.amazonaws.lexruntimev2#AccessDeniedException\":\n      response = {\n        ...(await deserializeAws_restJson1AccessDeniedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"BadGatewayException\":\n    case \"com.amazonaws.lexruntimev2#BadGatewayException\":\n      response = {\n        ...(await deserializeAws_restJson1BadGatewayExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ConflictException\":\n    case \"com.amazonaws.lexruntimev2#ConflictException\":\n      response = {\n        ...(await deserializeAws_restJson1ConflictExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"DependencyFailedException\":\n    case \"com.amazonaws.lexruntimev2#DependencyFailedException\":\n      response = {\n        ...(await deserializeAws_restJson1DependencyFailedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerException\":\n    case \"com.amazonaws.lexruntimev2#InternalServerException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.lexruntimev2#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ThrottlingException\":\n    case \"com.amazonaws.lexruntimev2#ThrottlingException\":\n      response = {\n        ...(await deserializeAws_restJson1ThrottlingExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ValidationException\":\n    case \"com.amazonaws.lexruntimev2#ValidationException\":\n      response = {\n        ...(await deserializeAws_restJson1ValidationExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1RecognizeUtteranceCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<RecognizeUtteranceCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1RecognizeUtteranceCommandError(output, context);\n  }\n  const contents: RecognizeUtteranceCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    audioStream: undefined,\n    contentType: undefined,\n    inputMode: undefined,\n    inputTranscript: undefined,\n    interpretations: undefined,\n    messages: undefined,\n    requestAttributes: undefined,\n    sessionId: undefined,\n    sessionState: undefined,\n  };\n  if (output.headers[\"x-amz-lex-input-mode\"] !== undefined) {\n    contents.inputMode = output.headers[\"x-amz-lex-input-mode\"];\n  }\n  if (output.headers[\"content-type\"] !== undefined) {\n    contents.contentType = output.headers[\"content-type\"];\n  }\n  if (output.headers[\"x-amz-lex-messages\"] !== undefined) {\n    contents.messages = output.headers[\"x-amz-lex-messages\"];\n  }\n  if (output.headers[\"x-amz-lex-interpretations\"] !== undefined) {\n    contents.interpretations = output.headers[\"x-amz-lex-interpretations\"];\n  }\n  if (output.headers[\"x-amz-lex-session-state\"] !== undefined) {\n    contents.sessionState = output.headers[\"x-amz-lex-session-state\"];\n  }\n  if (output.headers[\"x-amz-lex-request-attributes\"] !== undefined) {\n    contents.requestAttributes = output.headers[\"x-amz-lex-request-attributes\"];\n  }\n  if (output.headers[\"x-amz-lex-session-id\"] !== undefined) {\n    contents.sessionId = output.headers[\"x-amz-lex-session-id\"];\n  }\n  if (output.headers[\"x-amz-lex-input-transcript\"] !== undefined) {\n    contents.inputTranscript = output.headers[\"x-amz-lex-input-transcript\"];\n  }\n  const data: any = output.body;\n  contents.audioStream = data;\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1RecognizeUtteranceCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<RecognizeUtteranceCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"AccessDeniedException\":\n    case \"com.amazonaws.lexruntimev2#AccessDeniedException\":\n      response = {\n        ...(await deserializeAws_restJson1AccessDeniedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"BadGatewayException\":\n    case \"com.amazonaws.lexruntimev2#BadGatewayException\":\n      response = {\n        ...(await deserializeAws_restJson1BadGatewayExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ConflictException\":\n    case \"com.amazonaws.lexruntimev2#ConflictException\":\n      response = {\n        ...(await deserializeAws_restJson1ConflictExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"DependencyFailedException\":\n    case \"com.amazonaws.lexruntimev2#DependencyFailedException\":\n      response = {\n        ...(await deserializeAws_restJson1DependencyFailedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerException\":\n    case \"com.amazonaws.lexruntimev2#InternalServerException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.lexruntimev2#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ThrottlingException\":\n    case \"com.amazonaws.lexruntimev2#ThrottlingException\":\n      response = {\n        ...(await deserializeAws_restJson1ThrottlingExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ValidationException\":\n    case \"com.amazonaws.lexruntimev2#ValidationException\":\n      response = {\n        ...(await deserializeAws_restJson1ValidationExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1StartConversationCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext & __EventStreamSerdeContext\n): Promise<StartConversationCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1StartConversationCommandError(output, context);\n  }\n  const contents: StartConversationCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    responseEventStream: undefined,\n  };\n  const data: any = context.eventStreamMarshaller.deserialize(output.body, async (event) => {\n    const eventName = Object.keys(event)[0];\n    const eventHeaders = Object.entries(event[eventName].headers).reduce((accummulator, curr) => {\n      accummulator[curr[0]] = curr[1].value;\n      return accummulator;\n    }, {} as { [key: string]: any });\n    const eventMessage = {\n      headers: eventHeaders,\n      body: event[eventName].body,\n    };\n    const parsedEvent = {\n      [eventName]: eventMessage,\n    };\n    return await deserializeAws_restJson1StartConversationResponseEventStream_event(parsedEvent, context);\n  });\n  contents.responseEventStream = data;\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1StartConversationCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<StartConversationCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"AccessDeniedException\":\n    case \"com.amazonaws.lexruntimev2#AccessDeniedException\":\n      response = {\n        ...(await deserializeAws_restJson1AccessDeniedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerException\":\n    case \"com.amazonaws.lexruntimev2#InternalServerException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ThrottlingException\":\n    case \"com.amazonaws.lexruntimev2#ThrottlingException\":\n      response = {\n        ...(await deserializeAws_restJson1ThrottlingExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ValidationException\":\n    case \"com.amazonaws.lexruntimev2#ValidationException\":\n      response = {\n        ...(await deserializeAws_restJson1ValidationExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nconst serializeAws_restJson1StartConversationRequestEventStream_event = (\n  input: any,\n  context: __SerdeContext\n): __Message => {\n  return StartConversationRequestEventStream.visit(input, {\n    ConfigurationEvent: (value) => serializeAws_restJson1ConfigurationEvent_event(value, context),\n    AudioInputEvent: (value) => serializeAws_restJson1AudioInputEvent_event(value, context),\n    DTMFInputEvent: (value) => serializeAws_restJson1DTMFInputEvent_event(value, context),\n    TextInputEvent: (value) => serializeAws_restJson1TextInputEvent_event(value, context),\n    PlaybackCompletionEvent: (value) => serializeAws_restJson1PlaybackCompletionEvent_event(value, context),\n    DisconnectionEvent: (value) => serializeAws_restJson1DisconnectionEvent_event(value, context),\n    _: (value) => value as any,\n  });\n};\nconst deserializeAws_restJson1StartConversationResponseEventStream_event = async (\n  output: any,\n  context: __SerdeContext\n): Promise<StartConversationResponseEventStream> => {\n  if (output[\"PlaybackInterruptionEvent\"] !== undefined) {\n    return {\n      PlaybackInterruptionEvent: await deserializeAws_restJson1PlaybackInterruptionEvent_event(\n        output[\"PlaybackInterruptionEvent\"],\n        context\n      ),\n    };\n  }\n  if (output[\"TranscriptEvent\"] !== undefined) {\n    return {\n      TranscriptEvent: await deserializeAws_restJson1TranscriptEvent_event(output[\"TranscriptEvent\"], context),\n    };\n  }\n  if (output[\"IntentResultEvent\"] !== undefined) {\n    return {\n      IntentResultEvent: await deserializeAws_restJson1IntentResultEvent_event(output[\"IntentResultEvent\"], context),\n    };\n  }\n  if (output[\"TextResponseEvent\"] !== undefined) {\n    return {\n      TextResponseEvent: await deserializeAws_restJson1TextResponseEvent_event(output[\"TextResponseEvent\"], context),\n    };\n  }\n  if (output[\"AudioResponseEvent\"] !== undefined) {\n    return {\n      AudioResponseEvent: await deserializeAws_restJson1AudioResponseEvent_event(output[\"AudioResponseEvent\"], context),\n    };\n  }\n  if (output[\"HeartbeatEvent\"] !== undefined) {\n    return {\n      HeartbeatEvent: await deserializeAws_restJson1HeartbeatEvent_event(output[\"HeartbeatEvent\"], context),\n    };\n  }\n  if (output[\"AccessDeniedException\"] !== undefined) {\n    return {\n      AccessDeniedException: await deserializeAws_restJson1AccessDeniedException_event(\n        output[\"AccessDeniedException\"],\n        context\n      ),\n    };\n  }\n  if (output[\"ResourceNotFoundException\"] !== undefined) {\n    return {\n      ResourceNotFoundException: await deserializeAws_restJson1ResourceNotFoundException_event(\n        output[\"ResourceNotFoundException\"],\n        context\n      ),\n    };\n  }\n  if (output[\"ValidationException\"] !== undefined) {\n    return {\n      ValidationException: await deserializeAws_restJson1ValidationException_event(\n        output[\"ValidationException\"],\n        context\n      ),\n    };\n  }\n  if (output[\"ThrottlingException\"] !== undefined) {\n    return {\n      ThrottlingException: await deserializeAws_restJson1ThrottlingException_event(\n        output[\"ThrottlingException\"],\n        context\n      ),\n    };\n  }\n  if (output[\"InternalServerException\"] !== undefined) {\n    return {\n      InternalServerException: await deserializeAws_restJson1InternalServerException_event(\n        output[\"InternalServerException\"],\n        context\n      ),\n    };\n  }\n  if (output[\"ConflictException\"] !== undefined) {\n    return {\n      ConflictException: await deserializeAws_restJson1ConflictException_event(output[\"ConflictException\"], context),\n    };\n  }\n  if (output[\"DependencyFailedException\"] !== undefined) {\n    return {\n      DependencyFailedException: await deserializeAws_restJson1DependencyFailedException_event(\n        output[\"DependencyFailedException\"],\n        context\n      ),\n    };\n  }\n  if (output[\"BadGatewayException\"] !== undefined) {\n    return {\n      BadGatewayException: await deserializeAws_restJson1BadGatewayException_event(\n        output[\"BadGatewayException\"],\n        context\n      ),\n    };\n  }\n  return { $unknown: output };\n};\nconst serializeAws_restJson1AudioInputEvent_event = (input: AudioInputEvent, context: __SerdeContext): __Message => {\n  const message: __Message = {\n    headers: {\n      \":event-type\": { type: \"string\", value: \"AudioInputEvent\" },\n      \":message-type\": { type: \"string\", value: \"event\" },\n    },\n    body: new Uint8Array(),\n  };\n  message.body = serializeAws_restJson1AudioInputEvent(input, context);\n  return message;\n};\nconst serializeAws_restJson1ConfigurationEvent_event = (\n  input: ConfigurationEvent,\n  context: __SerdeContext\n): __Message => {\n  const message: __Message = {\n    headers: {\n      \":event-type\": { type: \"string\", value: \"ConfigurationEvent\" },\n      \":message-type\": { type: \"string\", value: \"event\" },\n    },\n    body: new Uint8Array(),\n  };\n  message.body = serializeAws_restJson1ConfigurationEvent(input, context);\n  return message;\n};\nconst serializeAws_restJson1DisconnectionEvent_event = (\n  input: DisconnectionEvent,\n  context: __SerdeContext\n): __Message => {\n  const message: __Message = {\n    headers: {\n      \":event-type\": { type: \"string\", value: \"DisconnectionEvent\" },\n      \":message-type\": { type: \"string\", value: \"event\" },\n    },\n    body: new Uint8Array(),\n  };\n  message.body = serializeAws_restJson1DisconnectionEvent(input, context);\n  return message;\n};\nconst serializeAws_restJson1DTMFInputEvent_event = (input: DTMFInputEvent, context: __SerdeContext): __Message => {\n  const message: __Message = {\n    headers: {\n      \":event-type\": { type: \"string\", value: \"DTMFInputEvent\" },\n      \":message-type\": { type: \"string\", value: \"event\" },\n    },\n    body: new Uint8Array(),\n  };\n  message.body = serializeAws_restJson1DTMFInputEvent(input, context);\n  return message;\n};\nconst serializeAws_restJson1PlaybackCompletionEvent_event = (\n  input: PlaybackCompletionEvent,\n  context: __SerdeContext\n): __Message => {\n  const message: __Message = {\n    headers: {\n      \":event-type\": { type: \"string\", value: \"PlaybackCompletionEvent\" },\n      \":message-type\": { type: \"string\", value: \"event\" },\n    },\n    body: new Uint8Array(),\n  };\n  message.body = serializeAws_restJson1PlaybackCompletionEvent(input, context);\n  return message;\n};\nconst serializeAws_restJson1TextInputEvent_event = (input: TextInputEvent, context: __SerdeContext): __Message => {\n  const message: __Message = {\n    headers: {\n      \":event-type\": { type: \"string\", value: \"TextInputEvent\" },\n      \":message-type\": { type: \"string\", value: \"event\" },\n    },\n    body: new Uint8Array(),\n  };\n  message.body = serializeAws_restJson1TextInputEvent(input, context);\n  return message;\n};\nconst deserializeAws_restJson1AccessDeniedException_event = async (\n  output: any,\n  context: __SerdeContext\n): Promise<AccessDeniedException> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  return deserializeAws_restJson1AccessDeniedExceptionResponse(parsedOutput, context);\n};\nconst deserializeAws_restJson1AudioResponseEvent_event = async (\n  output: any,\n  context: __SerdeContext\n): Promise<AudioResponseEvent> => {\n  let contents: AudioResponseEvent = {} as any;\n  const data: any = await parseBody(output.body, context);\n  contents = {\n    ...contents,\n    ...deserializeAws_restJson1AudioResponseEvent(data, context),\n  } as any;\n  return contents;\n};\nconst deserializeAws_restJson1BadGatewayException_event = async (\n  output: any,\n  context: __SerdeContext\n): Promise<BadGatewayException> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  return deserializeAws_restJson1BadGatewayExceptionResponse(parsedOutput, context);\n};\nconst deserializeAws_restJson1ConflictException_event = async (\n  output: any,\n  context: __SerdeContext\n): Promise<ConflictException> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  return deserializeAws_restJson1ConflictExceptionResponse(parsedOutput, context);\n};\nconst deserializeAws_restJson1DependencyFailedException_event = async (\n  output: any,\n  context: __SerdeContext\n): Promise<DependencyFailedException> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  return deserializeAws_restJson1DependencyFailedExceptionResponse(parsedOutput, context);\n};\nconst deserializeAws_restJson1HeartbeatEvent_event = async (\n  output: any,\n  context: __SerdeContext\n): Promise<HeartbeatEvent> => {\n  let contents: HeartbeatEvent = {} as any;\n  const data: any = await parseBody(output.body, context);\n  contents = {\n    ...contents,\n    ...deserializeAws_restJson1HeartbeatEvent(data, context),\n  } as any;\n  return contents;\n};\nconst deserializeAws_restJson1IntentResultEvent_event = async (\n  output: any,\n  context: __SerdeContext\n): Promise<IntentResultEvent> => {\n  let contents: IntentResultEvent = {} as any;\n  const data: any = await parseBody(output.body, context);\n  contents = {\n    ...contents,\n    ...deserializeAws_restJson1IntentResultEvent(data, context),\n  } as any;\n  return contents;\n};\nconst deserializeAws_restJson1InternalServerException_event = async (\n  output: any,\n  context: __SerdeContext\n): Promise<InternalServerException> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  return deserializeAws_restJson1InternalServerExceptionResponse(parsedOutput, context);\n};\nconst deserializeAws_restJson1PlaybackInterruptionEvent_event = async (\n  output: any,\n  context: __SerdeContext\n): Promise<PlaybackInterruptionEvent> => {\n  let contents: PlaybackInterruptionEvent = {} as any;\n  const data: any = await parseBody(output.body, context);\n  contents = {\n    ...contents,\n    ...deserializeAws_restJson1PlaybackInterruptionEvent(data, context),\n  } as any;\n  return contents;\n};\nconst deserializeAws_restJson1ResourceNotFoundException_event = async (\n  output: any,\n  context: __SerdeContext\n): Promise<ResourceNotFoundException> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  return deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context);\n};\nconst deserializeAws_restJson1TextResponseEvent_event = async (\n  output: any,\n  context: __SerdeContext\n): Promise<TextResponseEvent> => {\n  let contents: TextResponseEvent = {} as any;\n  const data: any = await parseBody(output.body, context);\n  contents = {\n    ...contents,\n    ...deserializeAws_restJson1TextResponseEvent(data, context),\n  } as any;\n  return contents;\n};\nconst deserializeAws_restJson1ThrottlingException_event = async (\n  output: any,\n  context: __SerdeContext\n): Promise<ThrottlingException> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  return deserializeAws_restJson1ThrottlingExceptionResponse(parsedOutput, context);\n};\nconst deserializeAws_restJson1TranscriptEvent_event = async (\n  output: any,\n  context: __SerdeContext\n): Promise<TranscriptEvent> => {\n  let contents: TranscriptEvent = {} as any;\n  const data: any = await parseBody(output.body, context);\n  contents = {\n    ...contents,\n    ...deserializeAws_restJson1TranscriptEvent(data, context),\n  } as any;\n  return contents;\n};\nconst deserializeAws_restJson1ValidationException_event = async (\n  output: any,\n  context: __SerdeContext\n): Promise<ValidationException> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  return deserializeAws_restJson1ValidationExceptionResponse(parsedOutput, context);\n};\nconst deserializeAws_restJson1AccessDeniedExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<AccessDeniedException> => {\n  const contents: AccessDeniedException = {\n    name: \"AccessDeniedException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    message: undefined,\n  };\n  const data: any = parsedOutput.body;\n  if (data.message !== undefined && data.message !== null) {\n    contents.message = __expectString(data.message);\n  }\n  return contents;\n};\n\nconst deserializeAws_restJson1BadGatewayExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<BadGatewayException> => {\n  const contents: BadGatewayException = {\n    name: \"BadGatewayException\",\n    $fault: \"server\",\n    $metadata: deserializeMetadata(parsedOutput),\n    message: undefined,\n  };\n  const data: any = parsedOutput.body;\n  if (data.message !== undefined && data.message !== null) {\n    contents.message = __expectString(data.message);\n  }\n  return contents;\n};\n\nconst deserializeAws_restJson1ConflictExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<ConflictException> => {\n  const contents: ConflictException = {\n    name: \"ConflictException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    message: undefined,\n  };\n  const data: any = parsedOutput.body;\n  if (data.message !== undefined && data.message !== null) {\n    contents.message = __expectString(data.message);\n  }\n  return contents;\n};\n\nconst deserializeAws_restJson1DependencyFailedExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<DependencyFailedException> => {\n  const contents: DependencyFailedException = {\n    name: \"DependencyFailedException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    message: undefined,\n  };\n  const data: any = parsedOutput.body;\n  if (data.message !== undefined && data.message !== null) {\n    contents.message = __expectString(data.message);\n  }\n  return contents;\n};\n\nconst deserializeAws_restJson1InternalServerExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<InternalServerException> => {\n  const contents: InternalServerException = {\n    name: \"InternalServerException\",\n    $fault: \"server\",\n    $metadata: deserializeMetadata(parsedOutput),\n    message: undefined,\n  };\n  const data: any = parsedOutput.body;\n  if (data.message !== undefined && data.message !== null) {\n    contents.message = __expectString(data.message);\n  }\n  return contents;\n};\n\nconst deserializeAws_restJson1ResourceNotFoundExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<ResourceNotFoundException> => {\n  const contents: ResourceNotFoundException = {\n    name: \"ResourceNotFoundException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    message: undefined,\n  };\n  const data: any = parsedOutput.body;\n  if (data.message !== undefined && data.message !== null) {\n    contents.message = __expectString(data.message);\n  }\n  return contents;\n};\n\nconst deserializeAws_restJson1ThrottlingExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<ThrottlingException> => {\n  const contents: ThrottlingException = {\n    name: \"ThrottlingException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    message: undefined,\n  };\n  const data: any = parsedOutput.body;\n  if (data.message !== undefined && data.message !== null) {\n    contents.message = __expectString(data.message);\n  }\n  return contents;\n};\n\nconst deserializeAws_restJson1ValidationExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<ValidationException> => {\n  const contents: ValidationException = {\n    name: \"ValidationException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    message: undefined,\n  };\n  const data: any = parsedOutput.body;\n  if (data.message !== undefined && data.message !== null) {\n    contents.message = __expectString(data.message);\n  }\n  return contents;\n};\n\nconst serializeAws_restJson1ActiveContext = (input: ActiveContext, context: __SerdeContext): any => {\n  return {\n    ...(input.contextAttributes !== undefined &&\n      input.contextAttributes !== null && {\n        contextAttributes: serializeAws_restJson1ActiveContextParametersMap(input.contextAttributes, context),\n      }),\n    ...(input.name !== undefined && input.name !== null && { name: input.name }),\n    ...(input.timeToLive !== undefined &&\n      input.timeToLive !== null && {\n        timeToLive: serializeAws_restJson1ActiveContextTimeToLive(input.timeToLive, context),\n      }),\n  };\n};\n\nconst serializeAws_restJson1ActiveContextParametersMap = (\n  input: { [key: string]: string },\n  context: __SerdeContext\n): any => {\n  return Object.entries(input).reduce((acc: { [key: string]: any }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: value,\n    };\n  }, {});\n};\n\nconst serializeAws_restJson1ActiveContextsList = (input: ActiveContext[], context: __SerdeContext): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return serializeAws_restJson1ActiveContext(entry, context);\n    });\n};\n\nconst serializeAws_restJson1ActiveContextTimeToLive = (\n  input: ActiveContextTimeToLive,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.timeToLiveInSeconds !== undefined &&\n      input.timeToLiveInSeconds !== null && { timeToLiveInSeconds: input.timeToLiveInSeconds }),\n    ...(input.turnsToLive !== undefined && input.turnsToLive !== null && { turnsToLive: input.turnsToLive }),\n  };\n};\n\nconst serializeAws_restJson1AudioInputEvent = (input: AudioInputEvent, context: __SerdeContext): any => {\n  return {\n    ...(input.audioChunk !== undefined &&\n      input.audioChunk !== null && { audioChunk: context.base64Encoder(input.audioChunk) }),\n    ...(input.clientTimestampMillis !== undefined &&\n      input.clientTimestampMillis !== null && { clientTimestampMillis: input.clientTimestampMillis }),\n    ...(input.contentType !== undefined && input.contentType !== null && { contentType: input.contentType }),\n    ...(input.eventId !== undefined && input.eventId !== null && { eventId: input.eventId }),\n  };\n};\n\nconst serializeAws_restJson1Button = (input: Button, context: __SerdeContext): any => {\n  return {\n    ...(input.text !== undefined && input.text !== null && { text: input.text }),\n    ...(input.value !== undefined && input.value !== null && { value: input.value }),\n  };\n};\n\nconst serializeAws_restJson1ButtonsList = (input: Button[], context: __SerdeContext): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return serializeAws_restJson1Button(entry, context);\n    });\n};\n\nconst serializeAws_restJson1ConfigurationEvent = (input: ConfigurationEvent, context: __SerdeContext): any => {\n  return {\n    ...(input.clientTimestampMillis !== undefined &&\n      input.clientTimestampMillis !== null && { clientTimestampMillis: input.clientTimestampMillis }),\n    ...(input.disablePlayback !== undefined &&\n      input.disablePlayback !== null && { disablePlayback: input.disablePlayback }),\n    ...(input.eventId !== undefined && input.eventId !== null && { eventId: input.eventId }),\n    ...(input.requestAttributes !== undefined &&\n      input.requestAttributes !== null && {\n        requestAttributes: serializeAws_restJson1StringMap(input.requestAttributes, context),\n      }),\n    ...(input.responseContentType !== undefined &&\n      input.responseContentType !== null && { responseContentType: input.responseContentType }),\n    ...(input.sessionState !== undefined &&\n      input.sessionState !== null && { sessionState: serializeAws_restJson1SessionState(input.sessionState, context) }),\n    ...(input.welcomeMessages !== undefined &&\n      input.welcomeMessages !== null && {\n        welcomeMessages: serializeAws_restJson1Messages(input.welcomeMessages, context),\n      }),\n  };\n};\n\nconst serializeAws_restJson1DialogAction = (input: DialogAction, context: __SerdeContext): any => {\n  return {\n    ...(input.slotToElicit !== undefined && input.slotToElicit !== null && { slotToElicit: input.slotToElicit }),\n    ...(input.type !== undefined && input.type !== null && { type: input.type }),\n  };\n};\n\nconst serializeAws_restJson1DisconnectionEvent = (input: DisconnectionEvent, context: __SerdeContext): any => {\n  return {\n    ...(input.clientTimestampMillis !== undefined &&\n      input.clientTimestampMillis !== null && { clientTimestampMillis: input.clientTimestampMillis }),\n    ...(input.eventId !== undefined && input.eventId !== null && { eventId: input.eventId }),\n  };\n};\n\nconst serializeAws_restJson1DTMFInputEvent = (input: DTMFInputEvent, context: __SerdeContext): any => {\n  return {\n    ...(input.clientTimestampMillis !== undefined &&\n      input.clientTimestampMillis !== null && { clientTimestampMillis: input.clientTimestampMillis }),\n    ...(input.eventId !== undefined && input.eventId !== null && { eventId: input.eventId }),\n    ...(input.inputCharacter !== undefined &&\n      input.inputCharacter !== null && { inputCharacter: input.inputCharacter }),\n  };\n};\n\nconst serializeAws_restJson1ImageResponseCard = (input: ImageResponseCard, context: __SerdeContext): any => {\n  return {\n    ...(input.buttons !== undefined &&\n      input.buttons !== null && { buttons: serializeAws_restJson1ButtonsList(input.buttons, context) }),\n    ...(input.imageUrl !== undefined && input.imageUrl !== null && { imageUrl: input.imageUrl }),\n    ...(input.subtitle !== undefined && input.subtitle !== null && { subtitle: input.subtitle }),\n    ...(input.title !== undefined && input.title !== null && { title: input.title }),\n  };\n};\n\nconst serializeAws_restJson1Intent = (input: Intent, context: __SerdeContext): any => {\n  return {\n    ...(input.confirmationState !== undefined &&\n      input.confirmationState !== null && { confirmationState: input.confirmationState }),\n    ...(input.name !== undefined && input.name !== null && { name: input.name }),\n    ...(input.slots !== undefined &&\n      input.slots !== null && { slots: serializeAws_restJson1Slots(input.slots, context) }),\n    ...(input.state !== undefined && input.state !== null && { state: input.state }),\n  };\n};\n\nconst serializeAws_restJson1Message = (input: Message, context: __SerdeContext): any => {\n  return {\n    ...(input.content !== undefined && input.content !== null && { content: input.content }),\n    ...(input.contentType !== undefined && input.contentType !== null && { contentType: input.contentType }),\n    ...(input.imageResponseCard !== undefined &&\n      input.imageResponseCard !== null && {\n        imageResponseCard: serializeAws_restJson1ImageResponseCard(input.imageResponseCard, context),\n      }),\n  };\n};\n\nconst serializeAws_restJson1Messages = (input: Message[], context: __SerdeContext): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return serializeAws_restJson1Message(entry, context);\n    });\n};\n\nconst serializeAws_restJson1PlaybackCompletionEvent = (\n  input: PlaybackCompletionEvent,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.clientTimestampMillis !== undefined &&\n      input.clientTimestampMillis !== null && { clientTimestampMillis: input.clientTimestampMillis }),\n    ...(input.eventId !== undefined && input.eventId !== null && { eventId: input.eventId }),\n  };\n};\n\nconst serializeAws_restJson1SessionState = (input: SessionState, context: __SerdeContext): any => {\n  return {\n    ...(input.activeContexts !== undefined &&\n      input.activeContexts !== null && {\n        activeContexts: serializeAws_restJson1ActiveContextsList(input.activeContexts, context),\n      }),\n    ...(input.dialogAction !== undefined &&\n      input.dialogAction !== null && { dialogAction: serializeAws_restJson1DialogAction(input.dialogAction, context) }),\n    ...(input.intent !== undefined &&\n      input.intent !== null && { intent: serializeAws_restJson1Intent(input.intent, context) }),\n    ...(input.originatingRequestId !== undefined &&\n      input.originatingRequestId !== null && { originatingRequestId: input.originatingRequestId }),\n    ...(input.sessionAttributes !== undefined &&\n      input.sessionAttributes !== null && {\n        sessionAttributes: serializeAws_restJson1StringMap(input.sessionAttributes, context),\n      }),\n  };\n};\n\nconst serializeAws_restJson1Slot = (input: Slot, context: __SerdeContext): any => {\n  return {\n    ...(input.shape !== undefined && input.shape !== null && { shape: input.shape }),\n    ...(input.value !== undefined &&\n      input.value !== null && { value: serializeAws_restJson1Value(input.value, context) }),\n    ...(input.values !== undefined &&\n      input.values !== null && { values: serializeAws_restJson1Values(input.values, context) }),\n  };\n};\n\nconst serializeAws_restJson1Slots = (input: { [key: string]: Slot }, context: __SerdeContext): any => {\n  return Object.entries(input).reduce((acc: { [key: string]: any }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: serializeAws_restJson1Slot(value, context),\n    };\n  }, {});\n};\n\nconst serializeAws_restJson1StartConversationRequestEventStream = (\n  input: StartConversationRequestEventStream,\n  context: __SerdeContext\n): any => {\n  return StartConversationRequestEventStream.visit(input, {\n    AudioInputEvent: (value) => ({ AudioInputEvent: serializeAws_restJson1AudioInputEvent(value, context) }),\n    ConfigurationEvent: (value) => ({ ConfigurationEvent: serializeAws_restJson1ConfigurationEvent(value, context) }),\n    DTMFInputEvent: (value) => ({ DTMFInputEvent: serializeAws_restJson1DTMFInputEvent(value, context) }),\n    DisconnectionEvent: (value) => ({ DisconnectionEvent: serializeAws_restJson1DisconnectionEvent(value, context) }),\n    PlaybackCompletionEvent: (value) => ({\n      PlaybackCompletionEvent: serializeAws_restJson1PlaybackCompletionEvent(value, context),\n    }),\n    TextInputEvent: (value) => ({ TextInputEvent: serializeAws_restJson1TextInputEvent(value, context) }),\n    _: (name, value) => ({ name: value } as any),\n  });\n};\n\nconst serializeAws_restJson1StringList = (input: string[], context: __SerdeContext): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return entry;\n    });\n};\n\nconst serializeAws_restJson1StringMap = (input: { [key: string]: string }, context: __SerdeContext): any => {\n  return Object.entries(input).reduce((acc: { [key: string]: any }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: value,\n    };\n  }, {});\n};\n\nconst serializeAws_restJson1TextInputEvent = (input: TextInputEvent, context: __SerdeContext): any => {\n  return {\n    ...(input.clientTimestampMillis !== undefined &&\n      input.clientTimestampMillis !== null && { clientTimestampMillis: input.clientTimestampMillis }),\n    ...(input.eventId !== undefined && input.eventId !== null && { eventId: input.eventId }),\n    ...(input.text !== undefined && input.text !== null && { text: input.text }),\n  };\n};\n\nconst serializeAws_restJson1Value = (input: Value, context: __SerdeContext): any => {\n  return {\n    ...(input.interpretedValue !== undefined &&\n      input.interpretedValue !== null && { interpretedValue: input.interpretedValue }),\n    ...(input.originalValue !== undefined && input.originalValue !== null && { originalValue: input.originalValue }),\n    ...(input.resolvedValues !== undefined &&\n      input.resolvedValues !== null && {\n        resolvedValues: serializeAws_restJson1StringList(input.resolvedValues, context),\n      }),\n  };\n};\n\nconst serializeAws_restJson1Values = (input: Slot[], context: __SerdeContext): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return serializeAws_restJson1Slot(entry, context);\n    });\n};\n\nconst deserializeAws_restJson1AccessDeniedException = (output: any, context: __SerdeContext): AccessDeniedException => {\n  return {\n    message: __expectString(output.message),\n  } as any;\n};\n\nconst deserializeAws_restJson1ActiveContext = (output: any, context: __SerdeContext): ActiveContext => {\n  return {\n    contextAttributes:\n      output.contextAttributes !== undefined && output.contextAttributes !== null\n        ? deserializeAws_restJson1ActiveContextParametersMap(output.contextAttributes, context)\n        : undefined,\n    name: __expectString(output.name),\n    timeToLive:\n      output.timeToLive !== undefined && output.timeToLive !== null\n        ? deserializeAws_restJson1ActiveContextTimeToLive(output.timeToLive, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1ActiveContextParametersMap = (\n  output: any,\n  context: __SerdeContext\n): { [key: string]: string } => {\n  return Object.entries(output).reduce((acc: { [key: string]: string }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: __expectString(value) as any,\n    };\n  }, {});\n};\n\nconst deserializeAws_restJson1ActiveContextsList = (output: any, context: __SerdeContext): ActiveContext[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restJson1ActiveContext(entry, context);\n    });\n};\n\nconst deserializeAws_restJson1ActiveContextTimeToLive = (\n  output: any,\n  context: __SerdeContext\n): ActiveContextTimeToLive => {\n  return {\n    timeToLiveInSeconds: __expectInt32(output.timeToLiveInSeconds),\n    turnsToLive: __expectInt32(output.turnsToLive),\n  } as any;\n};\n\nconst deserializeAws_restJson1AudioResponseEvent = (output: any, context: __SerdeContext): AudioResponseEvent => {\n  return {\n    audioChunk:\n      output.audioChunk !== undefined && output.audioChunk !== null\n        ? context.base64Decoder(output.audioChunk)\n        : undefined,\n    contentType: __expectString(output.contentType),\n    eventId: __expectString(output.eventId),\n  } as any;\n};\n\nconst deserializeAws_restJson1BadGatewayException = (output: any, context: __SerdeContext): BadGatewayException => {\n  return {\n    message: __expectString(output.message),\n  } as any;\n};\n\nconst deserializeAws_restJson1Button = (output: any, context: __SerdeContext): Button => {\n  return {\n    text: __expectString(output.text),\n    value: __expectString(output.value),\n  } as any;\n};\n\nconst deserializeAws_restJson1ButtonsList = (output: any, context: __SerdeContext): Button[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restJson1Button(entry, context);\n    });\n};\n\nconst deserializeAws_restJson1ConfidenceScore = (output: any, context: __SerdeContext): ConfidenceScore => {\n  return {\n    score: __limitedParseDouble(output.score),\n  } as any;\n};\n\nconst deserializeAws_restJson1ConflictException = (output: any, context: __SerdeContext): ConflictException => {\n  return {\n    message: __expectString(output.message),\n  } as any;\n};\n\nconst deserializeAws_restJson1DependencyFailedException = (\n  output: any,\n  context: __SerdeContext\n): DependencyFailedException => {\n  return {\n    message: __expectString(output.message),\n  } as any;\n};\n\nconst deserializeAws_restJson1DialogAction = (output: any, context: __SerdeContext): DialogAction => {\n  return {\n    slotToElicit: __expectString(output.slotToElicit),\n    type: __expectString(output.type),\n  } as any;\n};\n\nconst deserializeAws_restJson1HeartbeatEvent = (output: any, context: __SerdeContext): HeartbeatEvent => {\n  return {\n    eventId: __expectString(output.eventId),\n  } as any;\n};\n\nconst deserializeAws_restJson1ImageResponseCard = (output: any, context: __SerdeContext): ImageResponseCard => {\n  return {\n    buttons:\n      output.buttons !== undefined && output.buttons !== null\n        ? deserializeAws_restJson1ButtonsList(output.buttons, context)\n        : undefined,\n    imageUrl: __expectString(output.imageUrl),\n    subtitle: __expectString(output.subtitle),\n    title: __expectString(output.title),\n  } as any;\n};\n\nconst deserializeAws_restJson1Intent = (output: any, context: __SerdeContext): Intent => {\n  return {\n    confirmationState: __expectString(output.confirmationState),\n    name: __expectString(output.name),\n    slots:\n      output.slots !== undefined && output.slots !== null\n        ? deserializeAws_restJson1Slots(output.slots, context)\n        : undefined,\n    state: __expectString(output.state),\n  } as any;\n};\n\nconst deserializeAws_restJson1IntentResultEvent = (output: any, context: __SerdeContext): IntentResultEvent => {\n  return {\n    eventId: __expectString(output.eventId),\n    inputMode: __expectString(output.inputMode),\n    interpretations:\n      output.interpretations !== undefined && output.interpretations !== null\n        ? deserializeAws_restJson1Interpretations(output.interpretations, context)\n        : undefined,\n    requestAttributes:\n      output.requestAttributes !== undefined && output.requestAttributes !== null\n        ? deserializeAws_restJson1StringMap(output.requestAttributes, context)\n        : undefined,\n    sessionId: __expectString(output.sessionId),\n    sessionState:\n      output.sessionState !== undefined && output.sessionState !== null\n        ? deserializeAws_restJson1SessionState(output.sessionState, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1InternalServerException = (\n  output: any,\n  context: __SerdeContext\n): InternalServerException => {\n  return {\n    message: __expectString(output.message),\n  } as any;\n};\n\nconst deserializeAws_restJson1Interpretation = (output: any, context: __SerdeContext): Interpretation => {\n  return {\n    intent:\n      output.intent !== undefined && output.intent !== null\n        ? deserializeAws_restJson1Intent(output.intent, context)\n        : undefined,\n    nluConfidence:\n      output.nluConfidence !== undefined && output.nluConfidence !== null\n        ? deserializeAws_restJson1ConfidenceScore(output.nluConfidence, context)\n        : undefined,\n    sentimentResponse:\n      output.sentimentResponse !== undefined && output.sentimentResponse !== null\n        ? deserializeAws_restJson1SentimentResponse(output.sentimentResponse, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1Interpretations = (output: any, context: __SerdeContext): Interpretation[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restJson1Interpretation(entry, context);\n    });\n};\n\nconst deserializeAws_restJson1Message = (output: any, context: __SerdeContext): Message => {\n  return {\n    content: __expectString(output.content),\n    contentType: __expectString(output.contentType),\n    imageResponseCard:\n      output.imageResponseCard !== undefined && output.imageResponseCard !== null\n        ? deserializeAws_restJson1ImageResponseCard(output.imageResponseCard, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1Messages = (output: any, context: __SerdeContext): Message[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restJson1Message(entry, context);\n    });\n};\n\nconst deserializeAws_restJson1PlaybackInterruptionEvent = (\n  output: any,\n  context: __SerdeContext\n): PlaybackInterruptionEvent => {\n  return {\n    causedByEventId: __expectString(output.causedByEventId),\n    eventId: __expectString(output.eventId),\n    eventReason: __expectString(output.eventReason),\n  } as any;\n};\n\nconst deserializeAws_restJson1ResourceNotFoundException = (\n  output: any,\n  context: __SerdeContext\n): ResourceNotFoundException => {\n  return {\n    message: __expectString(output.message),\n  } as any;\n};\n\nconst deserializeAws_restJson1SentimentResponse = (output: any, context: __SerdeContext): SentimentResponse => {\n  return {\n    sentiment: __expectString(output.sentiment),\n    sentimentScore:\n      output.sentimentScore !== undefined && output.sentimentScore !== null\n        ? deserializeAws_restJson1SentimentScore(output.sentimentScore, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1SentimentScore = (output: any, context: __SerdeContext): SentimentScore => {\n  return {\n    mixed: __limitedParseDouble(output.mixed),\n    negative: __limitedParseDouble(output.negative),\n    neutral: __limitedParseDouble(output.neutral),\n    positive: __limitedParseDouble(output.positive),\n  } as any;\n};\n\nconst deserializeAws_restJson1SessionState = (output: any, context: __SerdeContext): SessionState => {\n  return {\n    activeContexts:\n      output.activeContexts !== undefined && output.activeContexts !== null\n        ? deserializeAws_restJson1ActiveContextsList(output.activeContexts, context)\n        : undefined,\n    dialogAction:\n      output.dialogAction !== undefined && output.dialogAction !== null\n        ? deserializeAws_restJson1DialogAction(output.dialogAction, context)\n        : undefined,\n    intent:\n      output.intent !== undefined && output.intent !== null\n        ? deserializeAws_restJson1Intent(output.intent, context)\n        : undefined,\n    originatingRequestId: __expectString(output.originatingRequestId),\n    sessionAttributes:\n      output.sessionAttributes !== undefined && output.sessionAttributes !== null\n        ? deserializeAws_restJson1StringMap(output.sessionAttributes, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1Slot = (output: any, context: __SerdeContext): Slot => {\n  return {\n    shape: __expectString(output.shape),\n    value:\n      output.value !== undefined && output.value !== null\n        ? deserializeAws_restJson1Value(output.value, context)\n        : undefined,\n    values:\n      output.values !== undefined && output.values !== null\n        ? deserializeAws_restJson1Values(output.values, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1Slots = (output: any, context: __SerdeContext): { [key: string]: Slot } => {\n  return Object.entries(output).reduce((acc: { [key: string]: Slot }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: deserializeAws_restJson1Slot(value, context),\n    };\n  }, {});\n};\n\nconst deserializeAws_restJson1StartConversationResponseEventStream = (\n  output: any,\n  context: __SerdeContext\n): StartConversationResponseEventStream => {\n  if (output.AccessDeniedException !== undefined && output.AccessDeniedException !== null) {\n    return {\n      AccessDeniedException: deserializeAws_restJson1AccessDeniedException(output.AccessDeniedException, context),\n    };\n  }\n  if (output.AudioResponseEvent !== undefined && output.AudioResponseEvent !== null) {\n    return {\n      AudioResponseEvent: deserializeAws_restJson1AudioResponseEvent(output.AudioResponseEvent, context),\n    };\n  }\n  if (output.BadGatewayException !== undefined && output.BadGatewayException !== null) {\n    return {\n      BadGatewayException: deserializeAws_restJson1BadGatewayException(output.BadGatewayException, context),\n    };\n  }\n  if (output.ConflictException !== undefined && output.ConflictException !== null) {\n    return {\n      ConflictException: deserializeAws_restJson1ConflictException(output.ConflictException, context),\n    };\n  }\n  if (output.DependencyFailedException !== undefined && output.DependencyFailedException !== null) {\n    return {\n      DependencyFailedException: deserializeAws_restJson1DependencyFailedException(\n        output.DependencyFailedException,\n        context\n      ),\n    };\n  }\n  if (output.HeartbeatEvent !== undefined && output.HeartbeatEvent !== null) {\n    return {\n      HeartbeatEvent: deserializeAws_restJson1HeartbeatEvent(output.HeartbeatEvent, context),\n    };\n  }\n  if (output.IntentResultEvent !== undefined && output.IntentResultEvent !== null) {\n    return {\n      IntentResultEvent: deserializeAws_restJson1IntentResultEvent(output.IntentResultEvent, context),\n    };\n  }\n  if (output.InternalServerException !== undefined && output.InternalServerException !== null) {\n    return {\n      InternalServerException: deserializeAws_restJson1InternalServerException(output.InternalServerException, context),\n    };\n  }\n  if (output.PlaybackInterruptionEvent !== undefined && output.PlaybackInterruptionEvent !== null) {\n    return {\n      PlaybackInterruptionEvent: deserializeAws_restJson1PlaybackInterruptionEvent(\n        output.PlaybackInterruptionEvent,\n        context\n      ),\n    };\n  }\n  if (output.ResourceNotFoundException !== undefined && output.ResourceNotFoundException !== null) {\n    return {\n      ResourceNotFoundException: deserializeAws_restJson1ResourceNotFoundException(\n        output.ResourceNotFoundException,\n        context\n      ),\n    };\n  }\n  if (output.TextResponseEvent !== undefined && output.TextResponseEvent !== null) {\n    return {\n      TextResponseEvent: deserializeAws_restJson1TextResponseEvent(output.TextResponseEvent, context),\n    };\n  }\n  if (output.ThrottlingException !== undefined && output.ThrottlingException !== null) {\n    return {\n      ThrottlingException: deserializeAws_restJson1ThrottlingException(output.ThrottlingException, context),\n    };\n  }\n  if (output.TranscriptEvent !== undefined && output.TranscriptEvent !== null) {\n    return {\n      TranscriptEvent: deserializeAws_restJson1TranscriptEvent(output.TranscriptEvent, context),\n    };\n  }\n  if (output.ValidationException !== undefined && output.ValidationException !== null) {\n    return {\n      ValidationException: deserializeAws_restJson1ValidationException(output.ValidationException, context),\n    };\n  }\n  return { $unknown: Object.entries(output)[0] };\n};\n\nconst deserializeAws_restJson1StringList = (output: any, context: __SerdeContext): string[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return __expectString(entry) as any;\n    });\n};\n\nconst deserializeAws_restJson1StringMap = (output: any, context: __SerdeContext): { [key: string]: string } => {\n  return Object.entries(output).reduce((acc: { [key: string]: string }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: __expectString(value) as any,\n    };\n  }, {});\n};\n\nconst deserializeAws_restJson1TextResponseEvent = (output: any, context: __SerdeContext): TextResponseEvent => {\n  return {\n    eventId: __expectString(output.eventId),\n    messages:\n      output.messages !== undefined && output.messages !== null\n        ? deserializeAws_restJson1Messages(output.messages, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1ThrottlingException = (output: any, context: __SerdeContext): ThrottlingException => {\n  return {\n    message: __expectString(output.message),\n  } as any;\n};\n\nconst deserializeAws_restJson1TranscriptEvent = (output: any, context: __SerdeContext): TranscriptEvent => {\n  return {\n    eventId: __expectString(output.eventId),\n    transcript: __expectString(output.transcript),\n  } as any;\n};\n\nconst deserializeAws_restJson1ValidationException = (output: any, context: __SerdeContext): ValidationException => {\n  return {\n    message: __expectString(output.message),\n  } as any;\n};\n\nconst deserializeAws_restJson1Value = (output: any, context: __SerdeContext): Value => {\n  return {\n    interpretedValue: __expectString(output.interpretedValue),\n    originalValue: __expectString(output.originalValue),\n    resolvedValues:\n      output.resolvedValues !== undefined && output.resolvedValues !== null\n        ? deserializeAws_restJson1StringList(output.resolvedValues, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1Values = (output: any, context: __SerdeContext): Slot[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restJson1Slot(entry, context);\n    });\n};\n\nconst deserializeMetadata = (output: __HttpResponse): __ResponseMetadata => ({\n  httpStatusCode: output.statusCode,\n  requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"],\n  extendedRequestId: output.headers[\"x-amz-id-2\"],\n  cfId: output.headers[\"x-amz-cf-id\"],\n});\n\n// Collect low-level response body stream to Uint8Array.\nconst collectBody = (streamBody: any = new Uint8Array(), context: __SerdeContext): Promise<Uint8Array> => {\n  if (streamBody instanceof Uint8Array) {\n    return Promise.resolve(streamBody);\n  }\n  return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n};\n\n// Encode Uint8Array data into string with utf-8.\nconst collectBodyString = (streamBody: any, context: __SerdeContext): Promise<string> =>\n  collectBody(streamBody, context).then((body) => context.utf8Encoder(body));\n\nconst isSerializableHeaderValue = (value: any): boolean =>\n  value !== undefined &&\n  value !== null &&\n  value !== \"\" &&\n  (!Object.getOwnPropertyNames(value).includes(\"length\") || value.length != 0) &&\n  (!Object.getOwnPropertyNames(value).includes(\"size\") || value.size != 0);\n\nconst parseBody = (streamBody: any, context: __SerdeContext): any =>\n  collectBodyString(streamBody, context).then((encoded) => {\n    if (encoded.length) {\n      return JSON.parse(encoded);\n    }\n    return {};\n  });\n\n/**\n * Load an error code for the aws.rest-json-1.1 protocol.\n */\nconst loadRestJsonErrorCode = (output: __HttpResponse, data: any): string => {\n  const findKey = (object: any, key: string) => Object.keys(object).find((k) => k.toLowerCase() === key.toLowerCase());\n\n  const sanitizeErrorCode = (rawValue: string): string => {\n    let cleanValue = rawValue;\n    if (cleanValue.indexOf(\":\") >= 0) {\n      cleanValue = cleanValue.split(\":\")[0];\n    }\n    if (cleanValue.indexOf(\"#\") >= 0) {\n      cleanValue = cleanValue.split(\"#\")[1];\n    }\n    return cleanValue;\n  };\n\n  const headerKey = findKey(output.headers, \"x-amzn-errortype\");\n  if (headerKey !== undefined) {\n    return sanitizeErrorCode(output.headers[headerKey]);\n  }\n\n  if (data.code !== undefined) {\n    return sanitizeErrorCode(data.code);\n  }\n\n  if (data[\"__type\"] !== undefined) {\n    return sanitizeErrorCode(data[\"__type\"]);\n  }\n\n  return \"\";\n};\n"]},"metadata":{},"sourceType":"module"}