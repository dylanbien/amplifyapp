{"ast":null,"code":"import { __awaiter, __generator, __read, __spreadArray } from \"tslib\";\nexport var retryMiddleware = function (options) {\n  return function (next, context) {\n    return function (args) {\n      return __awaiter(void 0, void 0, void 0, function () {\n        var retryStrategy;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , options.retryStrategy()];\n\n            case 1:\n              retryStrategy = _a.sent();\n              if (retryStrategy === null || retryStrategy === void 0 ? void 0 : retryStrategy.mode) context.userAgent = __spreadArray(__spreadArray([], __read(context.userAgent || []), false), [[\"cfg/retry-mode\", retryStrategy.mode]], false);\n              return [2\n              /*return*/\n              , retryStrategy.retry(next, args)];\n          }\n        });\n      });\n    };\n  };\n};\nexport var retryMiddlewareOptions = {\n  name: \"retryMiddleware\",\n  tags: [\"RETRY\"],\n  step: \"finalizeRequest\",\n  priority: \"high\",\n  override: true\n};\nexport var getRetryPlugin = function (options) {\n  return {\n    applyToStack: function (clientStack) {\n      clientStack.add(retryMiddleware(options), retryMiddlewareOptions);\n    }\n  };\n};","map":{"version":3,"mappings":";AAaA,OAAO,IAAMA,eAAe,GAC1B,UAACC,OAAD,EAA6B;EAC7B,iBACEC,IADF,EAEEC,OAFF,EAEkC;IAElC,iBAAOC,IAAP,EAA0C;MAAA;;;;;cAClB;cAAA;cAAA,EAAMH,OAAO,CAACI,aAAR,EAAN;;;cAAhBA,aAAa,GAAGC,SAAhB;cACN,IAAID,aAAa,SAAb,iBAAa,WAAb,GAAa,MAAb,gBAAa,CAAEE,IAAnB,EAAyBJ,OAAO,CAACK,SAAR,GAAiBC,uCAAQN,OAAO,CAACK,SAAR,IAAqB,EAA7B,GAAgC,KAAhC,GAAgC,CAAE,CAAC,gBAAD,EAAmBH,aAAa,CAACE,IAAjC,CAAF,CAAhC,EAAwE,KAAxE,CAAjB;cACzB;cAAA;cAAA,EAAOF,aAAa,CAACK,KAAd,CAAoBR,IAApB,EAA0BE,IAA1B,CAAP;;;OAHwC;IAIzC,CAJD;EAIC,CARD;AAQC,CAVI;AAYP,OAAO,IAAMO,sBAAsB,GAAqD;EACtFC,IAAI,EAAE,iBADgF;EAEtFC,IAAI,EAAE,CAAC,OAAD,CAFgF;EAGtFC,IAAI,EAAE,iBAHgF;EAItFC,QAAQ,EAAE,MAJ4E;EAKtFC,QAAQ,EAAE;AAL4E,CAAjF;AAQP,OAAO,IAAMC,cAAc,GAAG,UAAChB,OAAD,EAA6B;EAA0B,OAAC;IACpFiB,YAAY,EAAE,UAACC,WAAD,EAAY;MACxBA,WAAW,CAACC,GAAZ,CAAgBpB,eAAe,CAACC,OAAD,CAA/B,EAA0CU,sBAA1C;IACD;EAHmF,CAAD;AAInF,CAJK","names":["retryMiddleware","options","next","context","args","retryStrategy","_a","mode","userAgent","__spreadArray","retry","retryMiddlewareOptions","name","tags","step","priority","override","getRetryPlugin","applyToStack","clientStack","add"],"sources":["/Users/dylanbienstock/Documents/cs98/hack-a-thing-1/amplifyapp/node_modules/@aws-sdk/client-lex-runtime-v2/node_modules/@aws-sdk/middleware-retry/src/retryMiddleware.ts"],"sourcesContent":["import {\n  AbsoluteLocation,\n  FinalizeHandler,\n  FinalizeHandlerArguments,\n  FinalizeHandlerOutput,\n  FinalizeRequestHandlerOptions,\n  HandlerExecutionContext,\n  MetadataBearer,\n  Pluggable,\n} from \"@aws-sdk/types\";\n\nimport { RetryResolvedConfig } from \"./configurations\";\n\nexport const retryMiddleware =\n  (options: RetryResolvedConfig) =>\n  <Output extends MetadataBearer = MetadataBearer>(\n    next: FinalizeHandler<any, Output>,\n    context: HandlerExecutionContext\n  ): FinalizeHandler<any, Output> =>\n  async (args: FinalizeHandlerArguments<any>): Promise<FinalizeHandlerOutput<Output>> => {\n    const retryStrategy = await options.retryStrategy();\n    if (retryStrategy?.mode) context.userAgent = [...(context.userAgent || []), [\"cfg/retry-mode\", retryStrategy.mode]];\n    return retryStrategy.retry(next, args);\n  };\n\nexport const retryMiddlewareOptions: FinalizeRequestHandlerOptions & AbsoluteLocation = {\n  name: \"retryMiddleware\",\n  tags: [\"RETRY\"],\n  step: \"finalizeRequest\",\n  priority: \"high\",\n  override: true,\n};\n\nexport const getRetryPlugin = (options: RetryResolvedConfig): Pluggable<any, any> => ({\n  applyToStack: (clientStack) => {\n    clientStack.add(retryMiddleware(options), retryMiddlewareOptions);\n  },\n});\n"]},"metadata":{},"sourceType":"module"}