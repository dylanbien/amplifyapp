{"ast":null,"code":"/**\n * Serializes a number, turning non-numeric values into strings.\n *\n * @param value The number to serialize.\n * @returns A number, or a string if the given number was non-numeric.\n */\nexport var serializeFloat = function (value) {\n  // NaN is not equal to everything, including itself.\n  if (value !== value) {\n    return \"NaN\";\n  }\n\n  switch (value) {\n    case Infinity:\n      return \"Infinity\";\n\n    case -Infinity:\n      return \"-Infinity\";\n\n    default:\n      return value;\n  }\n};","map":{"version":3,"mappings":"AAAA;;;;;;AAMA,OAAO,IAAMA,cAAc,GAAG,UAACC,KAAD,EAAc;EAC1C;EACA,IAAIA,KAAK,KAAKA,KAAd,EAAqB;IACnB,OAAO,KAAP;EACD;;EACD,QAAQA,KAAR;IACE,KAAKC,QAAL;MACE,OAAO,UAAP;;IACF,KAAK,CAACA,QAAN;MACE,OAAO,WAAP;;IACF;MACE,OAAOD,KAAP;EANJ;AAQD,CAbM","names":["serializeFloat","value","Infinity"],"sources":["/Users/dylanbienstock/Documents/cs98/hack-a-thing-1/amplifyapp/node_modules/@aws-sdk/client-lex-runtime-v2/node_modules/@aws-sdk/smithy-client/src/ser-utils.ts"],"sourcesContent":["/**\n * Serializes a number, turning non-numeric values into strings.\n *\n * @param value The number to serialize.\n * @returns A number, or a string if the given number was non-numeric.\n */\nexport const serializeFloat = (value: number): string | number => {\n  // NaN is not equal to everything, including itself.\n  if (value !== value) {\n    return \"NaN\";\n  }\n  switch (value) {\n    case Infinity:\n      return \"Infinity\";\n    case -Infinity:\n      return \"-Infinity\";\n    default:\n      return value;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}