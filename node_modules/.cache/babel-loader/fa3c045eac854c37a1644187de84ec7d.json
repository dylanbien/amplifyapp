{"ast":null,"code":"import { __assign, __awaiter, __generator } from \"tslib\";\nimport { getRegionInfo } from \"@aws-sdk/config-resolver\";\nvar regionHash = {};\nvar partitionHash = {\n  aws: {\n    regions: [\"af-south-1\", \"ap-east-1\", \"ap-northeast-1\", \"ap-northeast-2\", \"ap-northeast-3\", \"ap-south-1\", \"ap-southeast-1\", \"ap-southeast-2\", \"ca-central-1\", \"eu-central-1\", \"eu-north-1\", \"eu-south-1\", \"eu-west-1\", \"eu-west-2\", \"eu-west-3\", \"me-south-1\", \"sa-east-1\", \"us-east-1\", \"us-east-2\", \"us-west-1\", \"us-west-2\"],\n    hostname: \"runtime-v2-lex.{region}.amazonaws.com\"\n  },\n  \"aws-cn\": {\n    regions: [\"cn-north-1\", \"cn-northwest-1\"],\n    hostname: \"runtime-v2-lex.{region}.amazonaws.com.cn\"\n  },\n  \"aws-iso\": {\n    regions: [\"us-iso-east-1\"],\n    hostname: \"runtime-v2-lex.{region}.c2s.ic.gov\"\n  },\n  \"aws-iso-b\": {\n    regions: [\"us-isob-east-1\"],\n    hostname: \"runtime-v2-lex.{region}.sc2s.sgov.gov\"\n  },\n  \"aws-us-gov\": {\n    regions: [\"us-gov-east-1\", \"us-gov-west-1\"],\n    hostname: \"runtime-v2-lex.{region}.amazonaws.com\"\n  }\n};\nexport var defaultRegionInfoProvider = function (region, options) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    return __generator(this, function (_a) {\n      return [2\n      /*return*/\n      , getRegionInfo(region, __assign(__assign({}, options), {\n        signingService: \"lex\",\n        regionHash: regionHash,\n        partitionHash: partitionHash\n      }))];\n    });\n  });\n};","map":{"version":3,"mappings":";AAAA,SAAoCA,aAApC,QAAyD,0BAAzD;AAGA,IAAMC,UAAU,GAAe,EAA/B;AAEA,IAAMC,aAAa,GAAkB;EACnCC,GAAG,EAAE;IACHC,OAAO,EAAE,CACP,YADO,EAEP,WAFO,EAGP,gBAHO,EAIP,gBAJO,EAKP,gBALO,EAMP,YANO,EAOP,gBAPO,EAQP,gBARO,EASP,cATO,EAUP,cAVO,EAWP,YAXO,EAYP,YAZO,EAaP,WAbO,EAcP,WAdO,EAeP,WAfO,EAgBP,YAhBO,EAiBP,WAjBO,EAkBP,WAlBO,EAmBP,WAnBO,EAoBP,WApBO,EAqBP,WArBO,CADN;IAwBHC,QAAQ,EAAE;EAxBP,CAD8B;EA2BnC,UAAU;IACRD,OAAO,EAAE,CAAC,YAAD,EAAe,gBAAf,CADD;IAERC,QAAQ,EAAE;EAFF,CA3ByB;EA+BnC,WAAW;IACTD,OAAO,EAAE,CAAC,eAAD,CADA;IAETC,QAAQ,EAAE;EAFD,CA/BwB;EAmCnC,aAAa;IACXD,OAAO,EAAE,CAAC,gBAAD,CADE;IAEXC,QAAQ,EAAE;EAFC,CAnCsB;EAuCnC,cAAc;IACZD,OAAO,EAAE,CAAC,eAAD,EAAkB,eAAlB,CADG;IAEZC,QAAQ,EAAE;EAFE;AAvCqB,CAArC;AA6CA,OAAO,IAAMC,yBAAyB,GAAuB,UAAOC,MAAP,EAAuBC,OAAvB,EAAoC;EAAA;;MAC/F;MAAA;MAAA,eAAa,CAACD,MAAD,EAAOE,sBACfD,OADe,GACR;QACVE,cAAc,EAAE,KADN;QAEVT,UAAU,YAFA;QAGVC,aAAa;MAHH,CADQ,CAAP,CAAb;;GAD+F;AAM7F,CANG","names":["getRegionInfo","regionHash","partitionHash","aws","regions","hostname","defaultRegionInfoProvider","region","options","__assign","signingService"],"sources":["/Users/dylanbienstock/Documents/cs98/hack-a-thing-1/amplifyapp/node_modules/@aws-sdk/client-lex-runtime-v2/endpoints.ts"],"sourcesContent":["import { PartitionHash, RegionHash, getRegionInfo } from \"@aws-sdk/config-resolver\";\nimport { RegionInfoProvider } from \"@aws-sdk/types\";\n\nconst regionHash: RegionHash = {};\n\nconst partitionHash: PartitionHash = {\n  aws: {\n    regions: [\n      \"af-south-1\",\n      \"ap-east-1\",\n      \"ap-northeast-1\",\n      \"ap-northeast-2\",\n      \"ap-northeast-3\",\n      \"ap-south-1\",\n      \"ap-southeast-1\",\n      \"ap-southeast-2\",\n      \"ca-central-1\",\n      \"eu-central-1\",\n      \"eu-north-1\",\n      \"eu-south-1\",\n      \"eu-west-1\",\n      \"eu-west-2\",\n      \"eu-west-3\",\n      \"me-south-1\",\n      \"sa-east-1\",\n      \"us-east-1\",\n      \"us-east-2\",\n      \"us-west-1\",\n      \"us-west-2\",\n    ],\n    hostname: \"runtime-v2-lex.{region}.amazonaws.com\",\n  },\n  \"aws-cn\": {\n    regions: [\"cn-north-1\", \"cn-northwest-1\"],\n    hostname: \"runtime-v2-lex.{region}.amazonaws.com.cn\",\n  },\n  \"aws-iso\": {\n    regions: [\"us-iso-east-1\"],\n    hostname: \"runtime-v2-lex.{region}.c2s.ic.gov\",\n  },\n  \"aws-iso-b\": {\n    regions: [\"us-isob-east-1\"],\n    hostname: \"runtime-v2-lex.{region}.sc2s.sgov.gov\",\n  },\n  \"aws-us-gov\": {\n    regions: [\"us-gov-east-1\", \"us-gov-west-1\"],\n    hostname: \"runtime-v2-lex.{region}.amazonaws.com\",\n  },\n};\n\nexport const defaultRegionInfoProvider: RegionInfoProvider = async (region: string, options?: any) =>\n  getRegionInfo(region, {\n    ...options,\n    signingService: \"lex\",\n    regionHash,\n    partitionHash,\n  });\n"]},"metadata":{},"sourceType":"module"}