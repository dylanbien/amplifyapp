{"ast":null,"code":"import { __assign } from \"tslib\";\nimport packageInfo from \"./package.json\";\nimport { Sha256 } from \"@aws-crypto/sha256-browser\";\nimport { eventStreamSerdeProvider } from \"@aws-sdk/eventstream-serde-browser\";\nimport { FetchHttpHandler, streamCollector } from \"@aws-sdk/fetch-http-handler\";\nimport { invalidFunction, invalidProvider } from \"@aws-sdk/invalid-dependency\";\nimport { DEFAULT_MAX_ATTEMPTS, DEFAULT_RETRY_MODE } from \"@aws-sdk/middleware-retry\";\nimport { fromBase64, toBase64 } from \"@aws-sdk/util-base64-browser\";\nimport { calculateBodyLength } from \"@aws-sdk/util-body-length-browser\";\nimport { defaultUserAgent } from \"@aws-sdk/util-user-agent-browser\";\nimport { fromUtf8, toUtf8 } from \"@aws-sdk/util-utf8-browser\";\nimport { getRuntimeConfig as getSharedRuntimeConfig } from \"./runtimeConfig.shared\";\n/**\n * @internal\n */\n\nexport var getRuntimeConfig = function (config) {\n  var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q;\n\n  var clientSharedValues = getSharedRuntimeConfig(config);\n  return __assign(__assign(__assign({}, clientSharedValues), config), {\n    runtime: \"browser\",\n    base64Decoder: (_a = config === null || config === void 0 ? void 0 : config.base64Decoder) !== null && _a !== void 0 ? _a : fromBase64,\n    base64Encoder: (_b = config === null || config === void 0 ? void 0 : config.base64Encoder) !== null && _b !== void 0 ? _b : toBase64,\n    bodyLengthChecker: (_c = config === null || config === void 0 ? void 0 : config.bodyLengthChecker) !== null && _c !== void 0 ? _c : calculateBodyLength,\n    credentialDefaultProvider: (_d = config === null || config === void 0 ? void 0 : config.credentialDefaultProvider) !== null && _d !== void 0 ? _d : function (_) {\n      return function () {\n        return Promise.reject(new Error(\"Credential is missing\"));\n      };\n    },\n    defaultUserAgentProvider: (_e = config === null || config === void 0 ? void 0 : config.defaultUserAgentProvider) !== null && _e !== void 0 ? _e : defaultUserAgent({\n      serviceId: clientSharedValues.serviceId,\n      clientVersion: packageInfo.version\n    }),\n    eventStreamPayloadHandlerProvider: (_f = config === null || config === void 0 ? void 0 : config.eventStreamPayloadHandlerProvider) !== null && _f !== void 0 ? _f : function () {\n      return {\n        handle: invalidFunction(\"event stream request is not supported in browser.\")\n      };\n    },\n    eventStreamSerdeProvider: (_g = config === null || config === void 0 ? void 0 : config.eventStreamSerdeProvider) !== null && _g !== void 0 ? _g : eventStreamSerdeProvider,\n    maxAttempts: (_h = config === null || config === void 0 ? void 0 : config.maxAttempts) !== null && _h !== void 0 ? _h : DEFAULT_MAX_ATTEMPTS,\n    region: (_j = config === null || config === void 0 ? void 0 : config.region) !== null && _j !== void 0 ? _j : invalidProvider(\"Region is missing\"),\n    requestHandler: (_k = config === null || config === void 0 ? void 0 : config.requestHandler) !== null && _k !== void 0 ? _k : new FetchHttpHandler(),\n    retryMode: (_l = config === null || config === void 0 ? void 0 : config.retryMode) !== null && _l !== void 0 ? _l : function () {\n      return Promise.resolve(DEFAULT_RETRY_MODE);\n    },\n    sha256: (_m = config === null || config === void 0 ? void 0 : config.sha256) !== null && _m !== void 0 ? _m : Sha256,\n    streamCollector: (_o = config === null || config === void 0 ? void 0 : config.streamCollector) !== null && _o !== void 0 ? _o : streamCollector,\n    utf8Decoder: (_p = config === null || config === void 0 ? void 0 : config.utf8Decoder) !== null && _p !== void 0 ? _p : fromUtf8,\n    utf8Encoder: (_q = config === null || config === void 0 ? void 0 : config.utf8Encoder) !== null && _q !== void 0 ? _q : toUtf8\n  });\n};","map":{"version":3,"mappings":"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","names":["packageInfo","Sha256","eventStreamSerdeProvider","FetchHttpHandler","streamCollector","invalidFunction","invalidProvider","DEFAULT_MAX_ATTEMPTS","DEFAULT_RETRY_MODE","fromBase64","toBase64","calculateBodyLength","defaultUserAgent","fromUtf8","toUtf8","getRuntimeConfig","getSharedRuntimeConfig","config","clientSharedValues","runtime","base64Decoder","_a","base64Encoder","_b","bodyLengthChecker","_c","credentialDefaultProvider","_d","_","reject","Error","defaultUserAgentProvider","_e","serviceId","clientVersion","version","eventStreamPayloadHandlerProvider","_f","handle","_g","maxAttempts","_h","region","_j","requestHandler","_k","retryMode","_l","resolve","sha256","_m","_o","utf8Decoder","_p","utf8Encoder","_q"],"sources":["/Users/dylanbienstock/Documents/cs98/hack-a-thing-1/amplifyapp/node_modules/@aws-sdk/client-lex-runtime-v2/runtimeConfig.browser.ts"],"sourcesContent":["import packageInfo from \"./package.json\";\n\nimport { Sha256 } from \"@aws-crypto/sha256-browser\";\nimport { eventStreamSerdeProvider } from \"@aws-sdk/eventstream-serde-browser\";\nimport { FetchHttpHandler, streamCollector } from \"@aws-sdk/fetch-http-handler\";\nimport { invalidFunction, invalidProvider } from \"@aws-sdk/invalid-dependency\";\nimport { DEFAULT_MAX_ATTEMPTS, DEFAULT_RETRY_MODE } from \"@aws-sdk/middleware-retry\";\nimport { fromBase64, toBase64 } from \"@aws-sdk/util-base64-browser\";\nimport { calculateBodyLength } from \"@aws-sdk/util-body-length-browser\";\nimport { defaultUserAgent } from \"@aws-sdk/util-user-agent-browser\";\nimport { fromUtf8, toUtf8 } from \"@aws-sdk/util-utf8-browser\";\nimport { LexRuntimeV2ClientConfig } from \"./LexRuntimeV2Client\";\nimport { getRuntimeConfig as getSharedRuntimeConfig } from \"./runtimeConfig.shared\";\n\n/**\n * @internal\n */\nexport const getRuntimeConfig = (config: LexRuntimeV2ClientConfig) => {\n  const clientSharedValues = getSharedRuntimeConfig(config);\n  return {\n    ...clientSharedValues,\n    ...config,\n    runtime: \"browser\",\n    base64Decoder: config?.base64Decoder ?? fromBase64,\n    base64Encoder: config?.base64Encoder ?? toBase64,\n    bodyLengthChecker: config?.bodyLengthChecker ?? calculateBodyLength,\n    credentialDefaultProvider:\n      config?.credentialDefaultProvider ?? ((_: unknown) => () => Promise.reject(new Error(\"Credential is missing\"))),\n    defaultUserAgentProvider:\n      config?.defaultUserAgentProvider ??\n      defaultUserAgent({ serviceId: clientSharedValues.serviceId, clientVersion: packageInfo.version }),\n    eventStreamPayloadHandlerProvider:\n      config?.eventStreamPayloadHandlerProvider ??\n      (() => ({ handle: invalidFunction(\"event stream request is not supported in browser.\") })),\n    eventStreamSerdeProvider: config?.eventStreamSerdeProvider ?? eventStreamSerdeProvider,\n    maxAttempts: config?.maxAttempts ?? DEFAULT_MAX_ATTEMPTS,\n    region: config?.region ?? invalidProvider(\"Region is missing\"),\n    requestHandler: config?.requestHandler ?? new FetchHttpHandler(),\n    retryMode: config?.retryMode ?? (() => Promise.resolve(DEFAULT_RETRY_MODE)),\n    sha256: config?.sha256 ?? Sha256,\n    streamCollector: config?.streamCollector ?? streamCollector,\n    utf8Decoder: config?.utf8Decoder ?? fromUtf8,\n    utf8Encoder: config?.utf8Encoder ?? toUtf8,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}