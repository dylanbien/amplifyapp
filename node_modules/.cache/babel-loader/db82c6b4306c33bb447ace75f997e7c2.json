{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { getRuntimeConfig as __getRuntimeConfig } from \"./runtimeConfig\";\nimport { resolveEndpointsConfig, resolveRegionConfig } from \"@aws-sdk/config-resolver\";\nimport { resolveEventStreamSerdeConfig } from \"@aws-sdk/eventstream-serde-config-resolver\";\nimport { getContentLengthPlugin } from \"@aws-sdk/middleware-content-length\";\nimport { resolveEventStreamConfig } from \"@aws-sdk/middleware-eventstream\";\nimport { getHostHeaderPlugin, resolveHostHeaderConfig } from \"@aws-sdk/middleware-host-header\";\nimport { getLoggerPlugin } from \"@aws-sdk/middleware-logger\";\nimport { getRetryPlugin, resolveRetryConfig } from \"@aws-sdk/middleware-retry\";\nimport { getAwsAuthPlugin, resolveAwsAuthConfig } from \"@aws-sdk/middleware-signing\";\nimport { getUserAgentPlugin, resolveUserAgentConfig } from \"@aws-sdk/middleware-user-agent\";\nimport { Client as __Client } from \"@aws-sdk/smithy-client\";\n/**\n * <p></p>\n */\n\nvar LexRuntimeV2Client =\n/** @class */\nfunction (_super) {\n  __extends(LexRuntimeV2Client, _super);\n\n  function LexRuntimeV2Client(configuration) {\n    var _this = this;\n\n    var _config_0 = __getRuntimeConfig(configuration);\n\n    var _config_1 = resolveRegionConfig(_config_0);\n\n    var _config_2 = resolveEndpointsConfig(_config_1);\n\n    var _config_3 = resolveRetryConfig(_config_2);\n\n    var _config_4 = resolveHostHeaderConfig(_config_3);\n\n    var _config_5 = resolveAwsAuthConfig(_config_4);\n\n    var _config_6 = resolveEventStreamConfig(_config_5);\n\n    var _config_7 = resolveUserAgentConfig(_config_6);\n\n    var _config_8 = resolveEventStreamSerdeConfig(_config_7);\n\n    _this = _super.call(this, _config_8) || this;\n    _this.config = _config_8;\n\n    _this.middlewareStack.use(getRetryPlugin(_this.config));\n\n    _this.middlewareStack.use(getContentLengthPlugin(_this.config));\n\n    _this.middlewareStack.use(getHostHeaderPlugin(_this.config));\n\n    _this.middlewareStack.use(getLoggerPlugin(_this.config));\n\n    _this.middlewareStack.use(getAwsAuthPlugin(_this.config));\n\n    _this.middlewareStack.use(getUserAgentPlugin(_this.config));\n\n    return _this;\n  }\n  /**\n   * Destroy underlying resources, like sockets. It's usually not necessary to do this.\n   * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.\n   * Otherwise, sockets might stay open for quite a long time before the server terminates them.\n   */\n\n\n  LexRuntimeV2Client.prototype.destroy = function () {\n    _super.prototype.destroy.call(this);\n  };\n\n  return LexRuntimeV2Client;\n}(__Client);\n\nexport { LexRuntimeV2Client };","map":{"version":3,"mappings":";AAMA,SAASA,gBAAgB,IAAIC,kBAA7B,QAAuD,iBAAvD;AACA,SAKEC,sBALF,EAMEC,mBANF,QAOO,0BAPP;AAQA,SAGEC,6BAHF,QAIO,4CAJP;AAKA,SAASC,sBAAT,QAAuC,oCAAvC;AACA,SAGEC,wBAHF,QAIO,iCAJP;AAKA,SAGEC,mBAHF,EAIEC,uBAJF,QAKO,iCALP;AAMA,SAASC,eAAT,QAAgC,4BAAhC;AACA,SAAgDC,cAAhD,EAAgEC,kBAAhE,QAA0F,2BAA1F;AACA,SAGEC,gBAHF,EAIEC,oBAJF,QAKO,6BALP;AAMA,SAGEC,kBAHF,EAIEC,sBAJF,QAKO,gCALP;AAOA,SACEC,MAAM,IAAIC,QADZ,QAIO,wBAJP;AAgMA;;;;AAGA;AAAA;AAAA;EAAwCC;;EAWtC,4BAAYC,aAAZ,EAAmD;IAAnD;;IACE,IAAIC,SAAS,GAAGnB,kBAAkB,CAACkB,aAAD,CAAlC;;IACA,IAAIE,SAAS,GAAGlB,mBAAmB,CAACiB,SAAD,CAAnC;;IACA,IAAIE,SAAS,GAAGpB,sBAAsB,CAACmB,SAAD,CAAtC;;IACA,IAAIE,SAAS,GAAGZ,kBAAkB,CAACW,SAAD,CAAlC;;IACA,IAAIE,SAAS,GAAGhB,uBAAuB,CAACe,SAAD,CAAvC;;IACA,IAAIE,SAAS,GAAGZ,oBAAoB,CAACW,SAAD,CAApC;;IACA,IAAIE,SAAS,GAAGpB,wBAAwB,CAACmB,SAAD,CAAxC;;IACA,IAAIE,SAAS,GAAGZ,sBAAsB,CAACW,SAAD,CAAtC;;IACA,IAAIE,SAAS,GAAGxB,6BAA6B,CAACuB,SAAD,CAA7C;;IACAE,0BAAMD,SAAN,KAAgB,IAAhB;IACAC,KAAI,CAACC,MAAL,GAAcF,SAAd;;IACAC,KAAI,CAACE,eAAL,CAAqBC,GAArB,CAAyBtB,cAAc,CAACmB,KAAI,CAACC,MAAN,CAAvC;;IACAD,KAAI,CAACE,eAAL,CAAqBC,GAArB,CAAyB3B,sBAAsB,CAACwB,KAAI,CAACC,MAAN,CAA/C;;IACAD,KAAI,CAACE,eAAL,CAAqBC,GAArB,CAAyBzB,mBAAmB,CAACsB,KAAI,CAACC,MAAN,CAA5C;;IACAD,KAAI,CAACE,eAAL,CAAqBC,GAArB,CAAyBvB,eAAe,CAACoB,KAAI,CAACC,MAAN,CAAxC;;IACAD,KAAI,CAACE,eAAL,CAAqBC,GAArB,CAAyBpB,gBAAgB,CAACiB,KAAI,CAACC,MAAN,CAAzC;;IACAD,KAAI,CAACE,eAAL,CAAqBC,GAArB,CAAyBlB,kBAAkB,CAACe,KAAI,CAACC,MAAN,CAA3C;;;EACD;EAED;;;;;;;EAKAG;IACEC,iBAAMC,OAAN,CAAaC,IAAb,CAAa,IAAb;EACD,CAFD;;EAGF;AAAC,CAvCD,CAAwCnB,QAAxC","names":["getRuntimeConfig","__getRuntimeConfig","resolveEndpointsConfig","resolveRegionConfig","resolveEventStreamSerdeConfig","getContentLengthPlugin","resolveEventStreamConfig","getHostHeaderPlugin","resolveHostHeaderConfig","getLoggerPlugin","getRetryPlugin","resolveRetryConfig","getAwsAuthPlugin","resolveAwsAuthConfig","getUserAgentPlugin","resolveUserAgentConfig","Client","__Client","__extends","configuration","_config_0","_config_1","_config_2","_config_3","_config_4","_config_5","_config_6","_config_7","_config_8","_this","config","middlewareStack","use","LexRuntimeV2Client","_super","destroy","call"],"sources":["/Users/dylanbienstock/Documents/cs98/hack-a-thing-1/amplifyapp/node_modules/@aws-sdk/client-lex-runtime-v2/LexRuntimeV2Client.ts"],"sourcesContent":["import { DeleteSessionCommandInput, DeleteSessionCommandOutput } from \"./commands/DeleteSessionCommand\";\nimport { GetSessionCommandInput, GetSessionCommandOutput } from \"./commands/GetSessionCommand\";\nimport { PutSessionCommandInput, PutSessionCommandOutput } from \"./commands/PutSessionCommand\";\nimport { RecognizeTextCommandInput, RecognizeTextCommandOutput } from \"./commands/RecognizeTextCommand\";\nimport { RecognizeUtteranceCommandInput, RecognizeUtteranceCommandOutput } from \"./commands/RecognizeUtteranceCommand\";\nimport { StartConversationCommandInput, StartConversationCommandOutput } from \"./commands/StartConversationCommand\";\nimport { getRuntimeConfig as __getRuntimeConfig } from \"./runtimeConfig\";\nimport {\n  EndpointsInputConfig,\n  EndpointsResolvedConfig,\n  RegionInputConfig,\n  RegionResolvedConfig,\n  resolveEndpointsConfig,\n  resolveRegionConfig,\n} from \"@aws-sdk/config-resolver\";\nimport {\n  EventStreamSerdeInputConfig,\n  EventStreamSerdeResolvedConfig,\n  resolveEventStreamSerdeConfig,\n} from \"@aws-sdk/eventstream-serde-config-resolver\";\nimport { getContentLengthPlugin } from \"@aws-sdk/middleware-content-length\";\nimport {\n  EventStreamInputConfig,\n  EventStreamResolvedConfig,\n  resolveEventStreamConfig,\n} from \"@aws-sdk/middleware-eventstream\";\nimport {\n  HostHeaderInputConfig,\n  HostHeaderResolvedConfig,\n  getHostHeaderPlugin,\n  resolveHostHeaderConfig,\n} from \"@aws-sdk/middleware-host-header\";\nimport { getLoggerPlugin } from \"@aws-sdk/middleware-logger\";\nimport { RetryInputConfig, RetryResolvedConfig, getRetryPlugin, resolveRetryConfig } from \"@aws-sdk/middleware-retry\";\nimport {\n  AwsAuthInputConfig,\n  AwsAuthResolvedConfig,\n  getAwsAuthPlugin,\n  resolveAwsAuthConfig,\n} from \"@aws-sdk/middleware-signing\";\nimport {\n  UserAgentInputConfig,\n  UserAgentResolvedConfig,\n  getUserAgentPlugin,\n  resolveUserAgentConfig,\n} from \"@aws-sdk/middleware-user-agent\";\nimport { HttpHandler as __HttpHandler } from \"@aws-sdk/protocol-http\";\nimport {\n  Client as __Client,\n  SmithyConfiguration as __SmithyConfiguration,\n  SmithyResolvedConfiguration as __SmithyResolvedConfiguration,\n} from \"@aws-sdk/smithy-client\";\nimport {\n  Provider,\n  RegionInfoProvider,\n  Credentials as __Credentials,\n  Decoder as __Decoder,\n  Encoder as __Encoder,\n  EventStreamPayloadHandlerProvider as __EventStreamPayloadHandlerProvider,\n  EventStreamSerdeProvider as __EventStreamSerdeProvider,\n  Hash as __Hash,\n  HashConstructor as __HashConstructor,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  Logger as __Logger,\n  Provider as __Provider,\n  StreamCollector as __StreamCollector,\n  UrlParser as __UrlParser,\n  UserAgent as __UserAgent,\n} from \"@aws-sdk/types\";\n\nexport type ServiceInputTypes =\n  | DeleteSessionCommandInput\n  | GetSessionCommandInput\n  | PutSessionCommandInput\n  | RecognizeTextCommandInput\n  | RecognizeUtteranceCommandInput\n  | StartConversationCommandInput;\n\nexport type ServiceOutputTypes =\n  | DeleteSessionCommandOutput\n  | GetSessionCommandOutput\n  | PutSessionCommandOutput\n  | RecognizeTextCommandOutput\n  | RecognizeUtteranceCommandOutput\n  | StartConversationCommandOutput;\n\nexport interface ClientDefaults extends Partial<__SmithyResolvedConfiguration<__HttpHandlerOptions>> {\n  /**\n   * The HTTP handler to use. Fetch in browser and Https in Nodejs.\n   */\n  requestHandler?: __HttpHandler;\n\n  /**\n   * A constructor for a class implementing the {@link __Hash} interface\n   * that computes the SHA-256 HMAC or checksum of a string or binary buffer.\n   * @internal\n   */\n  sha256?: __HashConstructor;\n\n  /**\n   * The function that will be used to convert strings into HTTP endpoints.\n   * @internal\n   */\n  urlParser?: __UrlParser;\n\n  /**\n   * A function that can calculate the length of a request body.\n   * @internal\n   */\n  bodyLengthChecker?: (body: any) => number | undefined;\n\n  /**\n   * A function that converts a stream into an array of bytes.\n   * @internal\n   */\n  streamCollector?: __StreamCollector;\n\n  /**\n   * The function that will be used to convert a base64-encoded string to a byte array.\n   * @internal\n   */\n  base64Decoder?: __Decoder;\n\n  /**\n   * The function that will be used to convert binary data to a base64-encoded string.\n   * @internal\n   */\n  base64Encoder?: __Encoder;\n\n  /**\n   * The function that will be used to convert a UTF8-encoded string to a byte array.\n   * @internal\n   */\n  utf8Decoder?: __Decoder;\n\n  /**\n   * The function that will be used to convert binary data to a UTF-8 encoded string.\n   * @internal\n   */\n  utf8Encoder?: __Encoder;\n\n  /**\n   * The runtime environment.\n   * @internal\n   */\n  runtime?: string;\n\n  /**\n   * Disable dyanamically changing the endpoint of the client based on the hostPrefix\n   * trait of an operation.\n   */\n  disableHostPrefix?: boolean;\n\n  /**\n   * Value for how many times a request will be made at most in case of retry.\n   */\n  maxAttempts?: number | __Provider<number>;\n\n  /**\n   * Specifies which retry algorithm to use.\n   */\n  retryMode?: string | __Provider<string>;\n\n  /**\n   * Optional logger for logging debug/info/warn/error.\n   */\n  logger?: __Logger;\n\n  /**\n   * Unique service identifier.\n   * @internal\n   */\n  serviceId?: string;\n\n  /**\n   * The AWS region to which this client will send requests\n   */\n  region?: string | __Provider<string>;\n\n  /**\n   * Default credentials provider; Not available in browser runtime.\n   * @internal\n   */\n  credentialDefaultProvider?: (input: any) => __Provider<__Credentials>;\n\n  /**\n   * Fetch related hostname, signing name or signing region with given region.\n   * @internal\n   */\n  regionInfoProvider?: RegionInfoProvider;\n\n  /**\n   * The function that provides necessary utilities for handling request event stream.\n   * @internal\n   */\n  eventStreamPayloadHandlerProvider?: __EventStreamPayloadHandlerProvider;\n\n  /**\n   * The provider populating default tracking information to be sent with `user-agent`, `x-amz-user-agent` header\n   * @internal\n   */\n  defaultUserAgentProvider?: Provider<__UserAgent>;\n\n  /**\n   * The function that provides necessary utilities for generating and parsing event stream\n   */\n  eventStreamSerdeProvider?: __EventStreamSerdeProvider;\n}\n\ntype LexRuntimeV2ClientConfigType = Partial<__SmithyConfiguration<__HttpHandlerOptions>> &\n  ClientDefaults &\n  RegionInputConfig &\n  EndpointsInputConfig &\n  RetryInputConfig &\n  HostHeaderInputConfig &\n  AwsAuthInputConfig &\n  EventStreamInputConfig &\n  UserAgentInputConfig &\n  EventStreamSerdeInputConfig;\n/**\n * The configuration interface of LexRuntimeV2Client class constructor that set the region, credentials and other options.\n */\nexport interface LexRuntimeV2ClientConfig extends LexRuntimeV2ClientConfigType {}\n\ntype LexRuntimeV2ClientResolvedConfigType = __SmithyResolvedConfiguration<__HttpHandlerOptions> &\n  Required<ClientDefaults> &\n  RegionResolvedConfig &\n  EndpointsResolvedConfig &\n  RetryResolvedConfig &\n  HostHeaderResolvedConfig &\n  AwsAuthResolvedConfig &\n  EventStreamResolvedConfig &\n  UserAgentResolvedConfig &\n  EventStreamSerdeResolvedConfig;\n/**\n * The resolved configuration interface of LexRuntimeV2Client class. This is resolved and normalized from the {@link LexRuntimeV2ClientConfig | constructor configuration interface}.\n */\nexport interface LexRuntimeV2ClientResolvedConfig extends LexRuntimeV2ClientResolvedConfigType {}\n\n/**\n * <p></p>\n */\nexport class LexRuntimeV2Client extends __Client<\n  __HttpHandlerOptions,\n  ServiceInputTypes,\n  ServiceOutputTypes,\n  LexRuntimeV2ClientResolvedConfig\n> {\n  /**\n   * The resolved configuration of LexRuntimeV2Client class. This is resolved and normalized from the {@link LexRuntimeV2ClientConfig | constructor configuration interface}.\n   */\n  readonly config: LexRuntimeV2ClientResolvedConfig;\n\n  constructor(configuration: LexRuntimeV2ClientConfig) {\n    let _config_0 = __getRuntimeConfig(configuration);\n    let _config_1 = resolveRegionConfig(_config_0);\n    let _config_2 = resolveEndpointsConfig(_config_1);\n    let _config_3 = resolveRetryConfig(_config_2);\n    let _config_4 = resolveHostHeaderConfig(_config_3);\n    let _config_5 = resolveAwsAuthConfig(_config_4);\n    let _config_6 = resolveEventStreamConfig(_config_5);\n    let _config_7 = resolveUserAgentConfig(_config_6);\n    let _config_8 = resolveEventStreamSerdeConfig(_config_7);\n    super(_config_8);\n    this.config = _config_8;\n    this.middlewareStack.use(getRetryPlugin(this.config));\n    this.middlewareStack.use(getContentLengthPlugin(this.config));\n    this.middlewareStack.use(getHostHeaderPlugin(this.config));\n    this.middlewareStack.use(getLoggerPlugin(this.config));\n    this.middlewareStack.use(getAwsAuthPlugin(this.config));\n    this.middlewareStack.use(getUserAgentPlugin(this.config));\n  }\n\n  /**\n   * Destroy underlying resources, like sockets. It's usually not necessary to do this.\n   * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.\n   * Otherwise, sockets might stay open for quite a long time before the server terminates them.\n   */\n  destroy(): void {\n    super.destroy();\n  }\n}\n"]},"metadata":{},"sourceType":"module"}