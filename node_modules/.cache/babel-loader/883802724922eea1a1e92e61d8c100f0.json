{"ast":null,"code":"export var normalizeRegion = function (region) {\n  if (typeof region === \"string\") {\n    var promisified_1 = Promise.resolve(region);\n    return function () {\n      return promisified_1;\n    };\n  }\n\n  return region;\n};","map":{"version":3,"mappings":"AAEA,OAAO,IAAMA,eAAe,GAAG,UAACC,MAAD,EAAkC;EAC/D,IAAI,OAAOA,MAAP,KAAkB,QAAtB,EAAgC;IAC9B,IAAMC,aAAW,GAAGC,OAAO,CAACC,OAAR,CAAgBH,MAAhB,CAApB;IACA,OAAO;MAAM;IAAW,CAAxB;EACD;;EACD,OAAOA,MAAP;AACD,CANM","names":["normalizeRegion","region","promisified_1","Promise","resolve"],"sources":["/Users/dylanbienstock/Documents/cs98/hack-a-thing-1/amplifyapp/node_modules/@aws-sdk/client-lex-runtime-v2/node_modules/@aws-sdk/config-resolver/src/regionConfig/normalizeRegion.ts"],"sourcesContent":["import { Provider } from \"@aws-sdk/types\";\n\nexport const normalizeRegion = (region: string | Provider<string>): Provider<string> => {\n  if (typeof region === \"string\") {\n    const promisified = Promise.resolve(region);\n    return () => promisified;\n  }\n  return region as Provider<string>;\n};\n"]},"metadata":{},"sourceType":"module"}