{"ast":null,"code":"import { __extends } from \"tslib\";\n/**\n * An error representing a failure of an individual credential provider.\n *\n * This error class has special meaning to the {@link chain} method. If a\n * provider in the chain is rejected with an error, the chain will only proceed\n * to the next provider if the value of the `tryNextLink` property on the error\n * is truthy. This allows individual providers to halt the chain and also\n * ensures the chain will stop if an entirely unexpected error is encountered.\n *\n * @deprecated\n */\n\nvar ProviderError =\n/** @class */\nfunction (_super) {\n  __extends(ProviderError, _super);\n\n  function ProviderError(message, tryNextLink) {\n    if (tryNextLink === void 0) {\n      tryNextLink = true;\n    }\n\n    var _this = _super.call(this, message) || this;\n\n    _this.tryNextLink = tryNextLink;\n    return _this;\n  }\n\n  ProviderError.from = function (error, tryNextLink) {\n    if (tryNextLink === void 0) {\n      tryNextLink = true;\n    }\n\n    Object.defineProperty(error, \"tryNextLink\", {\n      value: tryNextLink,\n      configurable: false,\n      enumerable: false,\n      writable: false\n    });\n    return error;\n  };\n\n  return ProviderError;\n}(Error);\n\nexport { ProviderError };\n/**\n * An error representing a failure of an individual credential provider.\n *\n * This error class has special meaning to the {@link chain} method. If a\n * provider in the chain is rejected with an error, the chain will only proceed\n * to the next provider if the value of the `tryNextLink` property on the error\n * is truthy. This allows individual providers to halt the chain and also\n * ensures the chain will stop if an entirely unexpected error is encountered.\n */\n\nvar CredentialsProviderError =\n/** @class */\nfunction (_super) {\n  __extends(CredentialsProviderError, _super);\n\n  function CredentialsProviderError(message, tryNextLink) {\n    if (tryNextLink === void 0) {\n      tryNextLink = true;\n    }\n\n    var _this = _super.call(this, message) || this;\n\n    _this.tryNextLink = tryNextLink;\n    _this.name = \"CredentialsProviderError\";\n    return _this;\n  }\n\n  CredentialsProviderError.from = function (error, tryNextLink) {\n    if (tryNextLink === void 0) {\n      tryNextLink = true;\n    }\n\n    Object.defineProperty(error, \"tryNextLink\", {\n      value: tryNextLink,\n      configurable: false,\n      enumerable: false,\n      writable: false\n    });\n    return error;\n  };\n\n  return CredentialsProviderError;\n}(Error);\n\nexport { CredentialsProviderError };","map":{"version":3,"mappings":";AAAA;;;;;;;;;;;;AAWA;AAAA;AAAA;EAAmCA;;EACjC,uBAAYC,OAAZ,EAA6CC,WAA7C,EAAwE;IAA3B;MAAAA;IAA2B;;IAAxE,YACEC,kBAAMF,OAAN,KAAc,IADhB;;IAA6CG;;EAE5C;;EACMC,qBAAP,UAAYC,KAAZ,EAA0BJ,WAA1B,EAA4C;IAAlB;MAAAA;IAAkB;;IAC1CK,MAAM,CAACC,cAAP,CAAsBF,KAAtB,EAA6B,aAA7B,EAA4C;MAC1CG,KAAK,EAAEP,WADmC;MAE1CQ,YAAY,EAAE,KAF4B;MAG1CC,UAAU,EAAE,KAH8B;MAI1CC,QAAQ,EAAE;IAJgC,CAA5C;IAMA,OAAON,KAAP;EACD,CARM;;EAST;AAAC,CAbD,CAAmCO,KAAnC;;;AAeA;;;;;;;;;;AASA;AAAA;AAAA;EAA8Cb;;EAE5C,kCAAYC,OAAZ,EAA6CC,WAA7C,EAAwE;IAA3B;MAAAA;IAA2B;;IAAxE,YACEC,kBAAMF,OAAN,KAAc,IADhB;;IAA6CG;IADpCA,aAAO,0BAAP;;EAGR;;EACMU,gCAAP,UAAYR,KAAZ,EAA0BJ,WAA1B,EAA4C;IAAlB;MAAAA;IAAkB;;IAC1CK,MAAM,CAACC,cAAP,CAAsBF,KAAtB,EAA6B,aAA7B,EAA4C;MAC1CG,KAAK,EAAEP,WADmC;MAE1CQ,YAAY,EAAE,KAF4B;MAG1CC,UAAU,EAAE,KAH8B;MAI1CC,QAAQ,EAAE;IAJgC,CAA5C;IAMA,OAAON,KAAP;EACD,CARM;;EAST;AAAC,CAdD,CAA8CO,KAA9C","names":["__extends","message","tryNextLink","_super","_this","ProviderError","error","Object","defineProperty","value","configurable","enumerable","writable","Error","CredentialsProviderError"],"sources":["/Users/dylanbienstock/Documents/cs98/hack-a-thing-1/amplifyapp/node_modules/@aws-sdk/client-lex-runtime-v2/node_modules/@aws-sdk/property-provider/src/ProviderError.ts"],"sourcesContent":["/**\n * An error representing a failure of an individual credential provider.\n *\n * This error class has special meaning to the {@link chain} method. If a\n * provider in the chain is rejected with an error, the chain will only proceed\n * to the next provider if the value of the `tryNextLink` property on the error\n * is truthy. This allows individual providers to halt the chain and also\n * ensures the chain will stop if an entirely unexpected error is encountered.\n *\n * @deprecated\n */\nexport class ProviderError extends Error {\n  constructor(message: string, public readonly tryNextLink: boolean = true) {\n    super(message);\n  }\n  static from(error: Error, tryNextLink = true): ProviderError {\n    Object.defineProperty(error, \"tryNextLink\", {\n      value: tryNextLink,\n      configurable: false,\n      enumerable: false,\n      writable: false,\n    });\n    return error as ProviderError;\n  }\n}\n\n/**\n * An error representing a failure of an individual credential provider.\n *\n * This error class has special meaning to the {@link chain} method. If a\n * provider in the chain is rejected with an error, the chain will only proceed\n * to the next provider if the value of the `tryNextLink` property on the error\n * is truthy. This allows individual providers to halt the chain and also\n * ensures the chain will stop if an entirely unexpected error is encountered.\n */\nexport class CredentialsProviderError extends Error {\n  readonly name = \"CredentialsProviderError\";\n  constructor(message: string, public readonly tryNextLink: boolean = true) {\n    super(message);\n  }\n  static from(error: Error, tryNextLink = true): CredentialsProviderError {\n    Object.defineProperty(error, \"tryNextLink\", {\n      value: tryNextLink,\n      configurable: false,\n      enumerable: false,\n      writable: false,\n    });\n    return error as CredentialsProviderError;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}