{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { normalizeEndpoint } from \"./utils/normalizeEndpoint\";\nexport var resolveCustomEndpointsConfig = function (input) {\n  var _a;\n\n  return __assign(__assign({}, input), {\n    tls: (_a = input.tls) !== null && _a !== void 0 ? _a : true,\n    endpoint: normalizeEndpoint(input),\n    isCustomEndpoint: true\n  });\n};","map":{"version":3,"mappings":";AAGA,SAASA,iBAAT,QAAkC,2BAAlC;AAqBA,OAAO,IAAMC,4BAA4B,GAAG,UAC1CC,KAD0C,EACgB;;;EACpB,6BACnCA,KADmC,GAC9B;IACRC,GAAG,EAAE,WAAK,CAACA,GAAN,MAAS,IAAT,IAASC,aAAT,GAASA,EAAT,GAAa,IADV;IAERC,QAAQ,EAAEL,iBAAiB,CAACE,KAAD,CAFnB;IAGRI,gBAAgB,EAAE;EAHV,CAD8B;AAKtC,CAPK","names":["normalizeEndpoint","resolveCustomEndpointsConfig","input","tls","_a","endpoint","isCustomEndpoint"],"sources":["/Users/dylanbienstock/Documents/cs98/hack-a-thing-1/amplifyapp/node_modules/@aws-sdk/client-lex-runtime-v2/node_modules/@aws-sdk/config-resolver/src/endpointsConfig/resolveCustomEndpointsConfig.ts"],"sourcesContent":["import { Endpoint, Provider, UrlParser } from \"@aws-sdk/types\";\n\nimport { EndpointsInputConfig, EndpointsResolvedConfig } from \"./resolveEndpointsConfig\";\nimport { normalizeEndpoint } from \"./utils/normalizeEndpoint\";\n\nexport interface CustomEndpointsInputConfig extends EndpointsInputConfig {\n  /**\n   * The fully qualified endpoint of the webservice.\n   */\n  endpoint: string | Endpoint | Provider<Endpoint>;\n}\n\ninterface PreviouslyResolved {\n  urlParser: UrlParser;\n}\n\nexport interface CustomEndpointsResolvedConfig extends EndpointsResolvedConfig {\n  /**\n   * Whether the endpoint is specified by caller.\n   * @internal\n   */\n  isCustomEndpoint: true;\n}\n\nexport const resolveCustomEndpointsConfig = <T>(\n  input: T & CustomEndpointsInputConfig & PreviouslyResolved\n): T & CustomEndpointsResolvedConfig => ({\n  ...input,\n  tls: input.tls ?? true,\n  endpoint: normalizeEndpoint(input),\n  isCustomEndpoint: true,\n});\n"]},"metadata":{},"sourceType":"module"}