{"ast":null,"code":"import { __assign } from \"tslib\";\nexport function resolveUserAgentConfig(input) {\n  return __assign(__assign({}, input), {\n    customUserAgent: typeof input.customUserAgent === \"string\" ? [[input.customUserAgent]] : input.customUserAgent\n  });\n}","map":{"version":3,"mappings":";AA0BA,OAAM,SAAUA,sBAAV,CACJC,KADI,EACgD;EAEpD,6BACKA,KADL,GACU;IACRC,eAAe,EAAE,OAAOD,KAAK,CAACC,eAAb,KAAiC,QAAjC,GAA4C,CAAC,CAACD,KAAK,CAACC,eAAP,CAAD,CAA5C,GAAwED,KAAK,CAACC;EADvF,CADV;AAID","names":["resolveUserAgentConfig","input","customUserAgent"],"sources":["/Users/dylanbienstock/Documents/cs98/hack-a-thing-1/amplifyapp/node_modules/@aws-sdk/client-lex-runtime-v2/node_modules/@aws-sdk/middleware-user-agent/src/configurations.ts"],"sourcesContent":["import { Provider, UserAgent } from \"@aws-sdk/types\";\nexport interface UserAgentInputConfig {\n  /**\n   * The custom user agent header that would be appended to default one\n   */\n  customUserAgent?: string | UserAgent;\n}\ninterface PreviouslyResolved {\n  defaultUserAgentProvider: Provider<UserAgent>;\n  runtime: string;\n}\nexport interface UserAgentResolvedConfig {\n  /**\n   * The provider populating default tracking information to be sent with `user-agent`, `x-amz-user-agent` header.\n   * @internal\n   */\n  defaultUserAgentProvider: Provider<UserAgent>;\n  /**\n   * The custom user agent header that would be appended to default one\n   */\n  customUserAgent?: UserAgent;\n  /**\n   * The runtime environment\n   */\n  runtime: string;\n}\nexport function resolveUserAgentConfig<T>(\n  input: T & PreviouslyResolved & UserAgentInputConfig\n): T & UserAgentResolvedConfig {\n  return {\n    ...input,\n    customUserAgent: typeof input.customUserAgent === \"string\" ? [[input.customUserAgent]] : input.customUserAgent,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}